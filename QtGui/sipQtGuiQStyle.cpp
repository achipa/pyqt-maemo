/*
 * Interface wrapper code.
 *
 * Generated by SIP snapshot-4.10.1-637497440cb5 on Sat Apr 24 19:01:03 2010
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qstyle.sip"
#include <qstyle.h>
#line 39 "sipQtGuiQStyle.cpp"

#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 43 "sipQtGuiQStyle.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 46 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 49 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 52 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qicon.sip"
#include <qicon.h>
#line 55 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 58 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 61 "sipQtGuiQStyle.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 64 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 67 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 70 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 73 "sipQtGuiQStyle.cpp"
#line 1503 "/home/maemo/python-qt4-4.7/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 76 "sipQtGuiQStyle.cpp"
#line 1181 "/home/maemo/python-qt4-4.7/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 79 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 82 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 85 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 88 "sipQtGuiQStyle.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 91 "sipQtGuiQStyle.cpp"
#line 118 "/home/maemo/python-qt4-4.7/sip/QtGui/qapplication.sip"
#include <qapplication.h>
#line 94 "sipQtGuiQStyle.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 97 "sipQtGuiQStyle.cpp"
#line 318 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 100 "sipQtGuiQStyle.cpp"
#line 305 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 103 "sipQtGuiQStyle.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 106 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 109 "sipQtGuiQStyle.cpp"
#line 38 "/home/maemo/python-qt4-4.7/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 112 "sipQtGuiQStyle.cpp"
#line 43 "/home/maemo/python-qt4-4.7/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 115 "sipQtGuiQStyle.cpp"
#line 125 "/home/maemo/python-qt4-4.7/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 118 "sipQtGuiQStyle.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qthread.sip"
#include <qthread.h>
#line 121 "sipQtGuiQStyle.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 124 "sipQtGuiQStyle.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 127 "sipQtGuiQStyle.cpp"


class sipQStyle : public QStyle
{
public:
    sipQStyle();
    virtual ~sipQStyle();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void polish(QWidget *);
    void unpolish(QWidget *);
    void polish(QApplication *);
    void unpolish(QApplication *);
    void polish(QPalette&);
    QRect itemTextRect(const QFontMetrics&,const QRect&,int,bool,const QString&) const;
    QRect itemPixmapRect(const QRect&,int,const QPixmap&) const;
    void drawItemText(QPainter *,const QRect&,int,const QPalette&,bool,const QString&,QPalette::ColorRole) const;
    void drawItemPixmap(QPainter *,const QRect&,int,const QPixmap&) const;
    QPalette standardPalette() const;
    void drawPrimitive(QStyle::PrimitiveElement,const QStyleOption *,QPainter *,const QWidget *) const;
    void drawControl(QStyle::ControlElement,const QStyleOption *,QPainter *,const QWidget *) const;
    QRect subElementRect(QStyle::SubElement,const QStyleOption *,const QWidget *) const;
    void drawComplexControl(QStyle::ComplexControl,const QStyleOptionComplex *,QPainter *,const QWidget *) const;
    QStyle::SubControl hitTestComplexControl(QStyle::ComplexControl,const QStyleOptionComplex *,const QPoint&,const QWidget *) const;
    QRect subControlRect(QStyle::ComplexControl,const QStyleOptionComplex *,QStyle::SubControl,const QWidget *) const;
    int pixelMetric(QStyle::PixelMetric,const QStyleOption *,const QWidget *) const;
    QSize sizeFromContents(QStyle::ContentsType,const QStyleOption *,const QSize&,const QWidget *) const;
    int styleHint(QStyle::StyleHint,const QStyleOption *,const QWidget *,QStyleHintReturn *) const;
    QPixmap standardPixmap(QStyle::StandardPixmap,const QStyleOption *,const QWidget *) const;
    QPixmap generatedIconPixmap(QIcon::Mode,const QPixmap&,const QStyleOption *) const;
    bool event(QEvent *);
    bool eventFilter(QObject *,QEvent *);
    void timerEvent(QTimerEvent *);
    void childEvent(QChildEvent *);
    void customEvent(QEvent *);
    void connectNotify(const char *);
    void disconnectNotify(const char *);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQStyle(const sipQStyle &);
    sipQStyle &operator = (const sipQStyle &);

    char sipPyMethods[28];
};

sipQStyle::sipQStyle(): QStyle(), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQStyle::~sipQStyle()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQStyle::metaObject() const
{
    return sip_QtGui_qt_metaobject(sipPySelf,sipType_QStyle);
}

int sipQStyle::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QStyle::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtGui_qt_metacall(sipPySelf,sipType_QStyle,_c,_id,_a);

    return _id;
}

void *sipQStyle::qt_metacast(const char *_clname)
{
    return (sip_QtGui_qt_metacast && sip_QtGui_qt_metacast(sipPySelf,sipType_QStyle,_clname)) ? this : QStyle::qt_metacast(_clname);
}

void sipQStyle::polish(QWidget *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_polish);

    if (!meth)
    {
        QStyle::polish(a0);
        return;
    }

    extern void sipVH_QtGui_7(sip_gilstate_t,PyObject *,QWidget *);

    sipVH_QtGui_7(sipGILState,meth,a0);
}

void sipQStyle::unpolish(QWidget *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_unpolish);

    if (!meth)
    {
        QStyle::unpolish(a0);
        return;
    }

    extern void sipVH_QtGui_7(sip_gilstate_t,PyObject *,QWidget *);

    sipVH_QtGui_7(sipGILState,meth,a0);
}

void sipQStyle::polish(QApplication *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_polish);

    if (!meth)
    {
        QStyle::polish(a0);
        return;
    }

    extern void sipVH_QtGui_98(sip_gilstate_t,PyObject *,QApplication *);

    sipVH_QtGui_98(sipGILState,meth,a0);
}

void sipQStyle::unpolish(QApplication *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_unpolish);

    if (!meth)
    {
        QStyle::unpolish(a0);
        return;
    }

    extern void sipVH_QtGui_98(sip_gilstate_t,PyObject *,QApplication *);

    sipVH_QtGui_98(sipGILState,meth,a0);
}

void sipQStyle::polish(QPalette& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_polish);

    if (!meth)
    {
        QStyle::polish(a0);
        return;
    }

    extern void sipVH_QtGui_97(sip_gilstate_t,PyObject *,QPalette&);

    sipVH_QtGui_97(sipGILState,meth,a0);
}

QRect sipQStyle::itemTextRect(const QFontMetrics& a0,const QRect& a1,int a2,bool a3,const QString& a4) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_itemTextRect);

    if (!meth)
        return QStyle::itemTextRect(a0,a1,a2,a3,a4);

    extern QRect sipVH_QtGui_96(sip_gilstate_t,PyObject *,const QFontMetrics&,const QRect&,int,bool,const QString&);

    return sipVH_QtGui_96(sipGILState,meth,a0,a1,a2,a3,a4);
}

QRect sipQStyle::itemPixmapRect(const QRect& a0,int a1,const QPixmap& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_itemPixmapRect);

    if (!meth)
        return QStyle::itemPixmapRect(a0,a1,a2);

    extern QRect sipVH_QtGui_95(sip_gilstate_t,PyObject *,const QRect&,int,const QPixmap&);

    return sipVH_QtGui_95(sipGILState,meth,a0,a1,a2);
}

void sipQStyle::drawItemText(QPainter *a0,const QRect& a1,int a2,const QPalette& a3,bool a4,const QString& a5,QPalette::ColorRole a6) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_drawItemText);

    if (!meth)
    {
        QStyle::drawItemText(a0,a1,a2,a3,a4,a5,a6);
        return;
    }

    extern void sipVH_QtGui_94(sip_gilstate_t,PyObject *,QPainter *,const QRect&,int,const QPalette&,bool,const QString&,QPalette::ColorRole);

    sipVH_QtGui_94(sipGILState,meth,a0,a1,a2,a3,a4,a5,a6);
}

void sipQStyle::drawItemPixmap(QPainter *a0,const QRect& a1,int a2,const QPixmap& a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[8]),sipPySelf,NULL,sipName_drawItemPixmap);

    if (!meth)
    {
        QStyle::drawItemPixmap(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtGui_93(sip_gilstate_t,PyObject *,QPainter *,const QRect&,int,const QPixmap&);

    sipVH_QtGui_93(sipGILState,meth,a0,a1,a2,a3);
}

QPalette sipQStyle::standardPalette() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[9]),sipPySelf,NULL,sipName_standardPalette);

    if (!meth)
        return QStyle::standardPalette();

    extern QPalette sipVH_QtGui_92(sip_gilstate_t,PyObject *);

    return sipVH_QtGui_92(sipGILState,meth);
}

void sipQStyle::drawPrimitive(QStyle::PrimitiveElement a0,const QStyleOption *a1,QPainter *a2,const QWidget *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,sipName_QStyle,sipName_drawPrimitive);

    if (!meth)
        return;

    extern void sipVH_QtGui_91(sip_gilstate_t,PyObject *,QStyle::PrimitiveElement,const QStyleOption *,QPainter *,const QWidget *);

    sipVH_QtGui_91(sipGILState,meth,a0,a1,a2,a3);
}

void sipQStyle::drawControl(QStyle::ControlElement a0,const QStyleOption *a1,QPainter *a2,const QWidget *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[11]),sipPySelf,sipName_QStyle,sipName_drawControl);

    if (!meth)
        return;

    extern void sipVH_QtGui_90(sip_gilstate_t,PyObject *,QStyle::ControlElement,const QStyleOption *,QPainter *,const QWidget *);

    sipVH_QtGui_90(sipGILState,meth,a0,a1,a2,a3);
}

QRect sipQStyle::subElementRect(QStyle::SubElement a0,const QStyleOption *a1,const QWidget *a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[12]),sipPySelf,sipName_QStyle,sipName_subElementRect);

    if (!meth)
        return QRect();

    extern QRect sipVH_QtGui_89(sip_gilstate_t,PyObject *,QStyle::SubElement,const QStyleOption *,const QWidget *);

    return sipVH_QtGui_89(sipGILState,meth,a0,a1,a2);
}

void sipQStyle::drawComplexControl(QStyle::ComplexControl a0,const QStyleOptionComplex *a1,QPainter *a2,const QWidget *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[13]),sipPySelf,sipName_QStyle,sipName_drawComplexControl);

    if (!meth)
        return;

    extern void sipVH_QtGui_88(sip_gilstate_t,PyObject *,QStyle::ComplexControl,const QStyleOptionComplex *,QPainter *,const QWidget *);

    sipVH_QtGui_88(sipGILState,meth,a0,a1,a2,a3);
}

QStyle::SubControl sipQStyle::hitTestComplexControl(QStyle::ComplexControl a0,const QStyleOptionComplex *a1,const QPoint& a2,const QWidget *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[14]),sipPySelf,sipName_QStyle,sipName_hitTestComplexControl);

    if (!meth)
        return (QStyle::SubControl)0;

    extern QStyle::SubControl sipVH_QtGui_87(sip_gilstate_t,PyObject *,QStyle::ComplexControl,const QStyleOptionComplex *,const QPoint&,const QWidget *);

    return sipVH_QtGui_87(sipGILState,meth,a0,a1,a2,a3);
}

QRect sipQStyle::subControlRect(QStyle::ComplexControl a0,const QStyleOptionComplex *a1,QStyle::SubControl a2,const QWidget *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[15]),sipPySelf,sipName_QStyle,sipName_subControlRect);

    if (!meth)
        return QRect();

    extern QRect sipVH_QtGui_86(sip_gilstate_t,PyObject *,QStyle::ComplexControl,const QStyleOptionComplex *,QStyle::SubControl,const QWidget *);

    return sipVH_QtGui_86(sipGILState,meth,a0,a1,a2,a3);
}

int sipQStyle::pixelMetric(QStyle::PixelMetric a0,const QStyleOption *a1,const QWidget *a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[16]),sipPySelf,sipName_QStyle,sipName_pixelMetric);

    if (!meth)
        return 0;

    extern int sipVH_QtGui_85(sip_gilstate_t,PyObject *,QStyle::PixelMetric,const QStyleOption *,const QWidget *);

    return sipVH_QtGui_85(sipGILState,meth,a0,a1,a2);
}

QSize sipQStyle::sizeFromContents(QStyle::ContentsType a0,const QStyleOption *a1,const QSize& a2,const QWidget *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[17]),sipPySelf,sipName_QStyle,sipName_sizeFromContents);

    if (!meth)
        return QSize();

    extern QSize sipVH_QtGui_84(sip_gilstate_t,PyObject *,QStyle::ContentsType,const QStyleOption *,const QSize&,const QWidget *);

    return sipVH_QtGui_84(sipGILState,meth,a0,a1,a2,a3);
}

int sipQStyle::styleHint(QStyle::StyleHint a0,const QStyleOption *a1,const QWidget *a2,QStyleHintReturn *a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[18]),sipPySelf,sipName_QStyle,sipName_styleHint);

    if (!meth)
        return 0;

    extern int sipVH_QtGui_83(sip_gilstate_t,PyObject *,QStyle::StyleHint,const QStyleOption *,const QWidget *,QStyleHintReturn *);

    return sipVH_QtGui_83(sipGILState,meth,a0,a1,a2,a3);
}

QPixmap sipQStyle::standardPixmap(QStyle::StandardPixmap a0,const QStyleOption *a1,const QWidget *a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[19]),sipPySelf,sipName_QStyle,sipName_standardPixmap);

    if (!meth)
        return QPixmap();

    extern QPixmap sipVH_QtGui_82(sip_gilstate_t,PyObject *,QStyle::StandardPixmap,const QStyleOption *,const QWidget *);

    return sipVH_QtGui_82(sipGILState,meth,a0,a1,a2);
}

QPixmap sipQStyle::generatedIconPixmap(QIcon::Mode a0,const QPixmap& a1,const QStyleOption *a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[20]),sipPySelf,sipName_QStyle,sipName_generatedIconPixmap);

    if (!meth)
        return QPixmap();

    extern QPixmap sipVH_QtGui_81(sip_gilstate_t,PyObject *,QIcon::Mode,const QPixmap&,const QStyleOption *);

    return sipVH_QtGui_81(sipGILState,meth,a0,a1,a2);
}

bool sipQStyle::event(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_event);

    if (!meth)
        return QObject::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t,PyObject *,QEvent *);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState,meth,a0);
}

bool sipQStyle::eventFilter(QObject *a0,QEvent *a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_eventFilter);

    if (!meth)
        return QObject::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_18)(sip_gilstate_t,PyObject *,QObject *,QEvent *);

    return ((sipVH_QtCore_18)(sipModuleAPI_QtGui_QtCore->em_virthandlers[18]))(sipGILState,meth,a0,a1);
}

void sipQStyle::timerEvent(QTimerEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_timerEvent);

    if (!meth)
    {
        QObject::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t,PyObject *,QTimerEvent *);

    ((sipVH_QtCore_9)(sipModuleAPI_QtGui_QtCore->em_virthandlers[9]))(sipGILState,meth,a0);
}

void sipQStyle::childEvent(QChildEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_childEvent);

    if (!meth)
    {
        QObject::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t,PyObject *,QChildEvent *);

    ((sipVH_QtCore_25)(sipModuleAPI_QtGui_QtCore->em_virthandlers[25]))(sipGILState,meth,a0);
}

void sipQStyle::customEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_customEvent);

    if (!meth)
    {
        QObject::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQStyle::connectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_connectNotify);

    if (!meth)
    {
        QObject::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState,meth,a0);
}

void sipQStyle::disconnectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_disconnectNotify);

    if (!meth)
    {
        QObject::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState,meth,a0);
}


PyDoc_STRVAR(doc_QStyle_polish, "QStyle.polish(QWidget)\n"
    "QStyle.polish(QApplication)\n"
    "QStyle.polish(QPalette) -> QPalette");

extern "C" {static PyObject *meth_QStyle_polish(PyObject *, PyObject *);}
static PyObject *meth_QStyle_polish(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QWidget * a0;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QStyle::polish(a0) : sipCpp->polish(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        QApplication * a0;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QApplication, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QStyle::polish(a0) : sipCpp->polish(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        QPalette * a0;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QStyle, &sipCpp, sipType_QPalette, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QStyle::polish(*a0) : sipCpp->polish(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromType(a0,sipType_QPalette,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_polish, doc_QStyle_polish);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_unpolish, "QStyle.unpolish(QWidget)\n"
    "QStyle.unpolish(QApplication)");

extern "C" {static PyObject *meth_QStyle_unpolish(PyObject *, PyObject *);}
static PyObject *meth_QStyle_unpolish(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QWidget * a0;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QStyle::unpolish(a0) : sipCpp->unpolish(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        QApplication * a0;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QApplication, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QStyle::unpolish(a0) : sipCpp->unpolish(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_unpolish, doc_QStyle_unpolish);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_itemTextRect, "QStyle.itemTextRect(QFontMetrics, QRect, int, bool, QString) -> QRect");

extern "C" {static PyObject *meth_QStyle_itemTextRect(PyObject *, PyObject *);}
static PyObject *meth_QStyle_itemTextRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QFontMetrics * a0;
        const QRect * a1;
        int a2;
        bool a3;
        const QString * a4;
        int a4State = 0;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J9ibJ1", &sipSelf, sipType_QStyle, &sipCpp, sipType_QFontMetrics, &a0, sipType_QRect, &a1, &a2, &a3, sipType_QString,&a4, &a4State))
        {
            QRect *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRect((sipSelfWasArg ? sipCpp->QStyle::itemTextRect(*a0,*a1,a2,a3,*a4) : sipCpp->itemTextRect(*a0,*a1,a2,a3,*a4)));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QString *>(a4),sipType_QString,a4State);

            return sipConvertFromNewType(sipRes,sipType_QRect,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_itemTextRect, doc_QStyle_itemTextRect);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_itemPixmapRect, "QStyle.itemPixmapRect(QRect, int, QPixmap) -> QRect");

extern "C" {static PyObject *meth_QStyle_itemPixmapRect(PyObject *, PyObject *);}
static PyObject *meth_QStyle_itemPixmapRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QRect * a0;
        int a1;
        const QPixmap * a2;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9iJ9", &sipSelf, sipType_QStyle, &sipCpp, sipType_QRect, &a0, &a1, sipType_QPixmap, &a2))
        {
            QRect *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRect((sipSelfWasArg ? sipCpp->QStyle::itemPixmapRect(*a0,a1,*a2) : sipCpp->itemPixmapRect(*a0,a1,*a2)));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRect,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_itemPixmapRect, doc_QStyle_itemPixmapRect);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_drawItemText, "QStyle.drawItemText(QPainter, QRect, int, QPalette, bool, QString, QPalette.ColorRole textRole=QPalette.NoRole)");

extern "C" {static PyObject *meth_QStyle_drawItemText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_drawItemText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter * a0;
        const QRect * a1;
        int a2;
        const QPalette * a3;
        bool a4;
        const QString * a5;
        int a5State = 0;
        QPalette::ColorRole a6 = QPalette::NoRole;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_textRole,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J9iJ9bJ1|E", &sipSelf, sipType_QStyle, &sipCpp, sipType_QPainter, &a0, sipType_QRect, &a1, &a2, sipType_QPalette, &a3, &a4, sipType_QString,&a5, &a5State, sipType_QPalette_ColorRole, &a6))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QStyle::drawItemText(a0,*a1,a2,*a3,a4,*a5,a6) : sipCpp->drawItemText(a0,*a1,a2,*a3,a4,*a5,a6));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QString *>(a5),sipType_QString,a5State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_drawItemText, doc_QStyle_drawItemText);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_drawItemPixmap, "QStyle.drawItemPixmap(QPainter, QRect, int, QPixmap)");

extern "C" {static PyObject *meth_QStyle_drawItemPixmap(PyObject *, PyObject *);}
static PyObject *meth_QStyle_drawItemPixmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter * a0;
        const QRect * a1;
        int a2;
        const QPixmap * a3;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9iJ9", &sipSelf, sipType_QStyle, &sipCpp, sipType_QPainter, &a0, sipType_QRect, &a1, &a2, sipType_QPixmap, &a3))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QStyle::drawItemPixmap(a0,*a1,a2,*a3) : sipCpp->drawItemPixmap(a0,*a1,a2,*a3));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_drawItemPixmap, doc_QStyle_drawItemPixmap);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_standardPalette, "QStyle.standardPalette() -> QPalette");

extern "C" {static PyObject *meth_QStyle_standardPalette(PyObject *, PyObject *);}
static PyObject *meth_QStyle_standardPalette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QStyle, &sipCpp))
        {
            QPalette *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPalette((sipSelfWasArg ? sipCpp->QStyle::standardPalette() : sipCpp->standardPalette()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPalette,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_standardPalette, doc_QStyle_standardPalette);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_drawPrimitive, "QStyle.drawPrimitive(QStyle.PrimitiveElement, QStyleOption, QPainter, QWidget widget=None)");

extern "C" {static PyObject *meth_QStyle_drawPrimitive(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_drawPrimitive(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::PrimitiveElement a0;
        const QStyleOption * a1;
        QPainter * a2;
        const QWidget * a3 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEJ8J8|J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_PrimitiveElement, &a0, sipType_QStyleOption, &a1, sipType_QPainter, &a2, sipType_QWidget, &a3))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_drawPrimitive);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipCpp->drawPrimitive(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_drawPrimitive, doc_QStyle_drawPrimitive);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_drawControl, "QStyle.drawControl(QStyle.ControlElement, QStyleOption, QPainter, QWidget widget=None)");

extern "C" {static PyObject *meth_QStyle_drawControl(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_drawControl(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::ControlElement a0;
        const QStyleOption * a1;
        QPainter * a2;
        const QWidget * a3 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEJ8J8|J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_ControlElement, &a0, sipType_QStyleOption, &a1, sipType_QPainter, &a2, sipType_QWidget, &a3))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_drawControl);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipCpp->drawControl(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_drawControl, doc_QStyle_drawControl);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_subElementRect, "QStyle.subElementRect(QStyle.SubElement, QStyleOption, QWidget widget=None) -> QRect");

extern "C" {static PyObject *meth_QStyle_subElementRect(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_subElementRect(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::SubElement a0;
        const QStyleOption * a1;
        const QWidget * a2 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEJ8|J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_SubElement, &a0, sipType_QStyleOption, &a1, sipType_QWidget, &a2))
        {
            QRect *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_subElementRect);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRect(sipCpp->subElementRect(a0,a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRect,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_subElementRect, doc_QStyle_subElementRect);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_drawComplexControl, "QStyle.drawComplexControl(QStyle.ComplexControl, QStyleOptionComplex, QPainter, QWidget widget=None)");

extern "C" {static PyObject *meth_QStyle_drawComplexControl(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_drawComplexControl(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::ComplexControl a0;
        const QStyleOptionComplex * a1;
        QPainter * a2;
        const QWidget * a3 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEJ8J8|J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_ComplexControl, &a0, sipType_QStyleOptionComplex, &a1, sipType_QPainter, &a2, sipType_QWidget, &a3))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_drawComplexControl);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipCpp->drawComplexControl(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_drawComplexControl, doc_QStyle_drawComplexControl);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_hitTestComplexControl, "QStyle.hitTestComplexControl(QStyle.ComplexControl, QStyleOptionComplex, QPoint, QWidget widget=None) -> QStyle.SubControl");

extern "C" {static PyObject *meth_QStyle_hitTestComplexControl(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_hitTestComplexControl(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::ComplexControl a0;
        const QStyleOptionComplex * a1;
        const QPoint * a2;
        const QWidget * a3 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEJ8J9|J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_ComplexControl, &a0, sipType_QStyleOptionComplex, &a1, sipType_QPoint, &a2, sipType_QWidget, &a3))
        {
            QStyle::SubControl sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_hitTestComplexControl);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->hitTestComplexControl(a0,a1,*a2,a3);
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_QStyle_SubControl);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_hitTestComplexControl, doc_QStyle_hitTestComplexControl);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_subControlRect, "QStyle.subControlRect(QStyle.ComplexControl, QStyleOptionComplex, QStyle.SubControl, QWidget widget=None) -> QRect");

extern "C" {static PyObject *meth_QStyle_subControlRect(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_subControlRect(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::ComplexControl a0;
        const QStyleOptionComplex * a1;
        QStyle::SubControl a2;
        const QWidget * a3 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEJ8E|J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_ComplexControl, &a0, sipType_QStyleOptionComplex, &a1, sipType_QStyle_SubControl, &a2, sipType_QWidget, &a3))
        {
            QRect *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_subControlRect);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRect(sipCpp->subControlRect(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRect,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_subControlRect, doc_QStyle_subControlRect);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_pixelMetric, "QStyle.pixelMetric(QStyle.PixelMetric, QStyleOption option=None, QWidget widget=None) -> int");

extern "C" {static PyObject *meth_QStyle_pixelMetric(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_pixelMetric(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::PixelMetric a0;
        const QStyleOption * a1 = 0;
        const QWidget * a2 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_option,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J8J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_PixelMetric, &a0, sipType_QStyleOption, &a1, sipType_QWidget, &a2))
        {
            int sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_pixelMetric);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->pixelMetric(a0,a1,a2);
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_pixelMetric, doc_QStyle_pixelMetric);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_sizeFromContents, "QStyle.sizeFromContents(QStyle.ContentsType, QStyleOption, QSize, QWidget widget=None) -> QSize");

extern "C" {static PyObject *meth_QStyle_sizeFromContents(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_sizeFromContents(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::ContentsType a0;
        const QStyleOption * a1;
        const QSize * a2;
        const QWidget * a3 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEJ8J9|J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_ContentsType, &a0, sipType_QStyleOption, &a1, sipType_QSize, &a2, sipType_QWidget, &a3))
        {
            QSize *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_sizeFromContents);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSize(sipCpp->sizeFromContents(a0,a1,*a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_sizeFromContents, doc_QStyle_sizeFromContents);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_styleHint, "QStyle.styleHint(QStyle.StyleHint, QStyleOption option=None, QWidget widget=None, QStyleHintReturn returnData=None) -> int");

extern "C" {static PyObject *meth_QStyle_styleHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_styleHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::StyleHint a0;
        const QStyleOption * a1 = 0;
        const QWidget * a2 = 0;
        QStyleHintReturn * a3 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_option,
            sipName_widget,
            sipName_returnData,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J8J8J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_StyleHint, &a0, sipType_QStyleOption, &a1, sipType_QWidget, &a2, sipType_QStyleHintReturn, &a3))
        {
            int sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_styleHint);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->styleHint(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_styleHint, doc_QStyle_styleHint);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_standardPixmap, "QStyle.standardPixmap(QStyle.StandardPixmap, QStyleOption option=None, QWidget widget=None) -> QPixmap");

extern "C" {static PyObject *meth_QStyle_standardPixmap(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_standardPixmap(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QStyle::StandardPixmap a0;
        const QStyleOption * a1 = 0;
        const QWidget * a2 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_option,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J8J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_StandardPixmap, &a0, sipType_QStyleOption, &a1, sipType_QWidget, &a2))
        {
            QPixmap *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_standardPixmap);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPixmap(sipCpp->standardPixmap(a0,a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPixmap,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_standardPixmap, doc_QStyle_standardPixmap);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_standardIcon, "QStyle.standardIcon(QStyle.StandardPixmap, QStyleOption option=None, QWidget widget=None) -> QIcon");

extern "C" {static PyObject *meth_QStyle_standardIcon(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_standardIcon(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QStyle::StandardPixmap a0;
        const QStyleOption * a1 = 0;
        const QWidget * a2 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_option,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J8J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_StandardPixmap, &a0, sipType_QStyleOption, &a1, sipType_QWidget, &a2))
        {
            QIcon *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QIcon(sipCpp->standardIcon(a0,a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QIcon,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_standardIcon, doc_QStyle_standardIcon);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_generatedIconPixmap, "QStyle.generatedIconPixmap(QIcon.Mode, QPixmap, QStyleOption) -> QPixmap");

extern "C" {static PyObject *meth_QStyle_generatedIconPixmap(PyObject *, PyObject *);}
static PyObject *meth_QStyle_generatedIconPixmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QIcon::Mode a0;
        const QPixmap * a1;
        const QStyleOption * a2;
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BEJ9J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QIcon_Mode, &a0, sipType_QPixmap, &a1, sipType_QStyleOption, &a2))
        {
            QPixmap *sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QStyle, sipName_generatedIconPixmap);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPixmap(sipCpp->generatedIconPixmap(a0,*a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPixmap,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_generatedIconPixmap, doc_QStyle_generatedIconPixmap);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_visualRect, "QStyle.visualRect(Qt.LayoutDirection, QRect, QRect) -> QRect");

extern "C" {static PyObject *meth_QStyle_visualRect(PyObject *, PyObject *);}
static PyObject *meth_QStyle_visualRect(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::LayoutDirection a0;
        const QRect * a1;
        const QRect * a2;

        if (sipParseArgs(&sipParseErr, sipArgs, "EJ9J9", sipType_Qt_LayoutDirection, &a0, sipType_QRect, &a1, sipType_QRect, &a2))
        {
            QRect *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRect(QStyle::visualRect(a0,*a1,*a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRect,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_visualRect, doc_QStyle_visualRect);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_visualPos, "QStyle.visualPos(Qt.LayoutDirection, QRect, QPoint) -> QPoint");

extern "C" {static PyObject *meth_QStyle_visualPos(PyObject *, PyObject *);}
static PyObject *meth_QStyle_visualPos(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::LayoutDirection a0;
        const QRect * a1;
        const QPoint * a2;

        if (sipParseArgs(&sipParseErr, sipArgs, "EJ9J9", sipType_Qt_LayoutDirection, &a0, sipType_QRect, &a1, sipType_QPoint, &a2))
        {
            QPoint *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPoint(QStyle::visualPos(a0,*a1,*a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPoint,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_visualPos, doc_QStyle_visualPos);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_sliderPositionFromValue, "QStyle.sliderPositionFromValue(int, int, int, int, bool upsideDown=False) -> int");

extern "C" {static PyObject *meth_QStyle_sliderPositionFromValue(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_sliderPositionFromValue(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        int a2;
        int a3;
        bool a4 = 0;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_upsideDown,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "iiii|b", &a0, &a1, &a2, &a3, &a4))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = QStyle::sliderPositionFromValue(a0,a1,a2,a3,a4);
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_sliderPositionFromValue, doc_QStyle_sliderPositionFromValue);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_sliderValueFromPosition, "QStyle.sliderValueFromPosition(int, int, int, int, bool upsideDown=False) -> int");

extern "C" {static PyObject *meth_QStyle_sliderValueFromPosition(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_sliderValueFromPosition(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        int a2;
        int a3;
        bool a4 = 0;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_upsideDown,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "iiii|b", &a0, &a1, &a2, &a3, &a4))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = QStyle::sliderValueFromPosition(a0,a1,a2,a3,a4);
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_sliderValueFromPosition, doc_QStyle_sliderValueFromPosition);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_visualAlignment, "QStyle.visualAlignment(Qt.LayoutDirection, Qt.Alignment) -> Qt.Alignment");

extern "C" {static PyObject *meth_QStyle_visualAlignment(PyObject *, PyObject *);}
static PyObject *meth_QStyle_visualAlignment(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::LayoutDirection a0;
        Qt::Alignment * a1;
        int a1State = 0;

        if (sipParseArgs(&sipParseErr, sipArgs, "EJ1", sipType_Qt_LayoutDirection, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            Qt::Alignment *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Qt::Alignment(QStyle::visualAlignment(a0,*a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_visualAlignment, doc_QStyle_visualAlignment);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_alignedRect, "QStyle.alignedRect(Qt.LayoutDirection, Qt.Alignment, QSize, QRect) -> QRect");

extern "C" {static PyObject *meth_QStyle_alignedRect(PyObject *, PyObject *);}
static PyObject *meth_QStyle_alignedRect(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::LayoutDirection a0;
        Qt::Alignment * a1;
        int a1State = 0;
        const QSize * a2;
        const QRect * a3;

        if (sipParseArgs(&sipParseErr, sipArgs, "EJ1J9J9", sipType_Qt_LayoutDirection, &a0, sipType_Qt_Alignment, &a1, &a1State, sipType_QSize, &a2, sipType_QRect, &a3))
        {
            QRect *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRect(QStyle::alignedRect(a0,*a1,*a2,*a3));
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            return sipConvertFromNewType(sipRes,sipType_QRect,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_alignedRect, doc_QStyle_alignedRect);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_layoutSpacing, "QStyle.layoutSpacing(QSizePolicy.ControlType, QSizePolicy.ControlType, Qt.Orientation, QStyleOption option=None, QWidget widget=None) -> int");

extern "C" {static PyObject *meth_QStyle_layoutSpacing(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_layoutSpacing(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QSizePolicy::ControlType a0;
        QSizePolicy::ControlType a1;
        Qt::Orientation a2;
        const QStyleOption * a3 = 0;
        const QWidget * a4 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_option,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BEEE|J8J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QSizePolicy_ControlType, &a0, sipType_QSizePolicy_ControlType, &a1, sipType_Qt_Orientation, &a2, sipType_QStyleOption, &a3, sipType_QWidget, &a4))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->layoutSpacing(a0,a1,a2,a3,a4);
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_layoutSpacing, doc_QStyle_layoutSpacing);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_combinedLayoutSpacing, "QStyle.combinedLayoutSpacing(QSizePolicy.ControlTypes, QSizePolicy.ControlTypes, Qt.Orientation, QStyleOption option=None, QWidget widget=None) -> int");

extern "C" {static PyObject *meth_QStyle_combinedLayoutSpacing(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_combinedLayoutSpacing(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QSizePolicy::ControlTypes * a0;
        int a0State = 0;
        QSizePolicy::ControlTypes * a1;
        int a1State = 0;
        Qt::Orientation a2;
        QStyleOption * a3 = 0;
        QWidget * a4 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_option,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1J1E|J8J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QSizePolicy_ControlTypes, &a0, &a0State, sipType_QSizePolicy_ControlTypes, &a1, &a1State, sipType_Qt_Orientation, &a2, sipType_QStyleOption, &a3, sipType_QWidget, &a4))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->combinedLayoutSpacing(*a0,*a1,a2,a3,a4);
            Py_END_ALLOW_THREADS
            sipReleaseType(a0,sipType_QSizePolicy_ControlTypes,a0State);
            sipReleaseType(a1,sipType_QSizePolicy_ControlTypes,a1State);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_combinedLayoutSpacing, doc_QStyle_combinedLayoutSpacing);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_standardIconImplementation, "QStyle.standardIconImplementation(QStyle.StandardPixmap, QStyleOption option=None, QWidget widget=None) -> QIcon");

extern "C" {static PyObject *meth_QStyle_standardIconImplementation(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_standardIconImplementation(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QStyle::StandardPixmap a0;
        const QStyleOption * a1 = 0;
        const QWidget * a2 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_option,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "pE|J8J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QStyle_StandardPixmap, &a0, sipType_QStyleOption, &a1, sipType_QWidget, &a2))
        {
            QIcon *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QIcon(sipCpp->standardIconImplementation(a0,a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QIcon,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_standardIconImplementation, doc_QStyle_standardIconImplementation);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_layoutSpacingImplementation, "QStyle.layoutSpacingImplementation(QSizePolicy.ControlType, QSizePolicy.ControlType, Qt.Orientation, QStyleOption option=None, QWidget widget=None) -> int");

extern "C" {static PyObject *meth_QStyle_layoutSpacingImplementation(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QStyle_layoutSpacingImplementation(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QSizePolicy::ControlType a0;
        QSizePolicy::ControlType a1;
        Qt::Orientation a2;
        const QStyleOption * a3 = 0;
        const QWidget * a4 = 0;
        QStyle *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_option,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "pEEE|J8J8", &sipSelf, sipType_QStyle, &sipCpp, sipType_QSizePolicy_ControlType, &a0, sipType_QSizePolicy_ControlType, &a1, sipType_Qt_Orientation, &a2, sipType_QStyleOption, &a3, sipType_QWidget, &a4))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->layoutSpacingImplementation(a0,a1,a2,a3,a4);
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_layoutSpacingImplementation, doc_QStyle_layoutSpacingImplementation);

    return NULL;
}


PyDoc_STRVAR(doc_QStyle_proxy, "QStyle.proxy() -> QStyle");

extern "C" {static PyObject *meth_QStyle_proxy(PyObject *, PyObject *);}
static PyObject *meth_QStyle_proxy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QStyle *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QStyle, &sipCpp))
        {
            const QStyle *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->proxy();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(const_cast<QStyle *>(sipRes),sipType_QStyle,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QStyle, sipName_proxy, doc_QStyle_proxy);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QStyle(void *, const sipTypeDef *);}
static void *cast_QStyle(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QStyle)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QObject)->ctd_cast((QObject *)(QStyle *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QStyle(void *, int);}
static void release_QStyle(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQStyle *>(sipCppV);
    else
        delete reinterpret_cast<QStyle *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QStyle(sipSimpleWrapper *);}
static void dealloc_QStyle(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQStyle *>(sipSelf->u.cppPtr)->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QStyle(sipSelf->u.cppPtr,sipSelf->flags);
    }
}


extern "C" {static void *init_QStyle(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QStyle(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipQStyle *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQStyle();
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QStyle[] = {{129, 0, 1}};


static PyMethodDef methods_QStyle[] = {
    {SIP_MLNAME_CAST(sipName_alignedRect), meth_QStyle_alignedRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_alignedRect)},
    {SIP_MLNAME_CAST(sipName_combinedLayoutSpacing), (PyCFunction)meth_QStyle_combinedLayoutSpacing, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_combinedLayoutSpacing)},
    {SIP_MLNAME_CAST(sipName_drawComplexControl), (PyCFunction)meth_QStyle_drawComplexControl, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_drawComplexControl)},
    {SIP_MLNAME_CAST(sipName_drawControl), (PyCFunction)meth_QStyle_drawControl, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_drawControl)},
    {SIP_MLNAME_CAST(sipName_drawItemPixmap), meth_QStyle_drawItemPixmap, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_drawItemPixmap)},
    {SIP_MLNAME_CAST(sipName_drawItemText), (PyCFunction)meth_QStyle_drawItemText, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_drawItemText)},
    {SIP_MLNAME_CAST(sipName_drawPrimitive), (PyCFunction)meth_QStyle_drawPrimitive, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_drawPrimitive)},
    {SIP_MLNAME_CAST(sipName_generatedIconPixmap), meth_QStyle_generatedIconPixmap, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_generatedIconPixmap)},
    {SIP_MLNAME_CAST(sipName_hitTestComplexControl), (PyCFunction)meth_QStyle_hitTestComplexControl, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_hitTestComplexControl)},
    {SIP_MLNAME_CAST(sipName_itemPixmapRect), meth_QStyle_itemPixmapRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_itemPixmapRect)},
    {SIP_MLNAME_CAST(sipName_itemTextRect), meth_QStyle_itemTextRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_itemTextRect)},
    {SIP_MLNAME_CAST(sipName_layoutSpacing), (PyCFunction)meth_QStyle_layoutSpacing, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_layoutSpacing)},
    {SIP_MLNAME_CAST(sipName_layoutSpacingImplementation), (PyCFunction)meth_QStyle_layoutSpacingImplementation, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_layoutSpacingImplementation)},
    {SIP_MLNAME_CAST(sipName_pixelMetric), (PyCFunction)meth_QStyle_pixelMetric, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_pixelMetric)},
    {SIP_MLNAME_CAST(sipName_polish), meth_QStyle_polish, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_polish)},
    {SIP_MLNAME_CAST(sipName_proxy), meth_QStyle_proxy, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_proxy)},
    {SIP_MLNAME_CAST(sipName_sizeFromContents), (PyCFunction)meth_QStyle_sizeFromContents, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_sizeFromContents)},
    {SIP_MLNAME_CAST(sipName_sliderPositionFromValue), (PyCFunction)meth_QStyle_sliderPositionFromValue, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_sliderPositionFromValue)},
    {SIP_MLNAME_CAST(sipName_sliderValueFromPosition), (PyCFunction)meth_QStyle_sliderValueFromPosition, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_sliderValueFromPosition)},
    {SIP_MLNAME_CAST(sipName_standardIcon), (PyCFunction)meth_QStyle_standardIcon, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_standardIcon)},
    {SIP_MLNAME_CAST(sipName_standardIconImplementation), (PyCFunction)meth_QStyle_standardIconImplementation, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_standardIconImplementation)},
    {SIP_MLNAME_CAST(sipName_standardPalette), meth_QStyle_standardPalette, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_standardPalette)},
    {SIP_MLNAME_CAST(sipName_standardPixmap), (PyCFunction)meth_QStyle_standardPixmap, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_standardPixmap)},
    {SIP_MLNAME_CAST(sipName_styleHint), (PyCFunction)meth_QStyle_styleHint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_styleHint)},
    {SIP_MLNAME_CAST(sipName_subControlRect), (PyCFunction)meth_QStyle_subControlRect, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_subControlRect)},
    {SIP_MLNAME_CAST(sipName_subElementRect), (PyCFunction)meth_QStyle_subElementRect, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QStyle_subElementRect)},
    {SIP_MLNAME_CAST(sipName_unpolish), meth_QStyle_unpolish, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_unpolish)},
    {SIP_MLNAME_CAST(sipName_visualAlignment), meth_QStyle_visualAlignment, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_visualAlignment)},
    {SIP_MLNAME_CAST(sipName_visualPos), meth_QStyle_visualPos, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_visualPos)},
    {SIP_MLNAME_CAST(sipName_visualRect), meth_QStyle_visualRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QStyle_visualRect)}
};

static sipEnumMemberDef enummembers_QStyle[] = {
    {sipName_CC_ComboBox, QStyle::CC_ComboBox, 462},
    {sipName_CC_CustomBase, QStyle::CC_CustomBase, 462},
    {sipName_CC_Dial, QStyle::CC_Dial, 462},
    {sipName_CC_GroupBox, QStyle::CC_GroupBox, 462},
    {sipName_CC_MdiControls, QStyle::CC_MdiControls, 462},
    {sipName_CC_Q3ListView, QStyle::CC_Q3ListView, 462},
    {sipName_CC_ScrollBar, QStyle::CC_ScrollBar, 462},
    {sipName_CC_Slider, QStyle::CC_Slider, 462},
    {sipName_CC_SpinBox, QStyle::CC_SpinBox, 462},
    {sipName_CC_TitleBar, QStyle::CC_TitleBar, 462},
    {sipName_CC_ToolButton, QStyle::CC_ToolButton, 462},
    {sipName_CE_CheckBox, QStyle::CE_CheckBox, 464},
    {sipName_CE_CheckBoxLabel, QStyle::CE_CheckBoxLabel, 464},
    {sipName_CE_ColumnViewGrip, QStyle::CE_ColumnViewGrip, 464},
    {sipName_CE_ComboBoxLabel, QStyle::CE_ComboBoxLabel, 464},
    {sipName_CE_CustomBase, QStyle::CE_CustomBase, 464},
    {sipName_CE_DockWidgetTitle, QStyle::CE_DockWidgetTitle, 464},
    {sipName_CE_FocusFrame, QStyle::CE_FocusFrame, 464},
    {sipName_CE_Header, QStyle::CE_Header, 464},
    {sipName_CE_HeaderEmptyArea, QStyle::CE_HeaderEmptyArea, 464},
    {sipName_CE_HeaderLabel, QStyle::CE_HeaderLabel, 464},
    {sipName_CE_HeaderSection, QStyle::CE_HeaderSection, 464},
    {sipName_CE_ItemViewItem, QStyle::CE_ItemViewItem, 464},
    {sipName_CE_MenuBarEmptyArea, QStyle::CE_MenuBarEmptyArea, 464},
    {sipName_CE_MenuBarItem, QStyle::CE_MenuBarItem, 464},
    {sipName_CE_MenuEmptyArea, QStyle::CE_MenuEmptyArea, 464},
    {sipName_CE_MenuHMargin, QStyle::CE_MenuHMargin, 464},
    {sipName_CE_MenuItem, QStyle::CE_MenuItem, 464},
    {sipName_CE_MenuScroller, QStyle::CE_MenuScroller, 464},
    {sipName_CE_MenuTearoff, QStyle::CE_MenuTearoff, 464},
    {sipName_CE_MenuVMargin, QStyle::CE_MenuVMargin, 464},
    {sipName_CE_ProgressBar, QStyle::CE_ProgressBar, 464},
    {sipName_CE_ProgressBarContents, QStyle::CE_ProgressBarContents, 464},
    {sipName_CE_ProgressBarGroove, QStyle::CE_ProgressBarGroove, 464},
    {sipName_CE_ProgressBarLabel, QStyle::CE_ProgressBarLabel, 464},
    {sipName_CE_PushButton, QStyle::CE_PushButton, 464},
    {sipName_CE_PushButtonBevel, QStyle::CE_PushButtonBevel, 464},
    {sipName_CE_PushButtonLabel, QStyle::CE_PushButtonLabel, 464},
    {sipName_CE_Q3DockWindowEmptyArea, QStyle::CE_Q3DockWindowEmptyArea, 464},
    {sipName_CE_RadioButton, QStyle::CE_RadioButton, 464},
    {sipName_CE_RadioButtonLabel, QStyle::CE_RadioButtonLabel, 464},
    {sipName_CE_RubberBand, QStyle::CE_RubberBand, 464},
    {sipName_CE_ScrollBarAddLine, QStyle::CE_ScrollBarAddLine, 464},
    {sipName_CE_ScrollBarAddPage, QStyle::CE_ScrollBarAddPage, 464},
    {sipName_CE_ScrollBarFirst, QStyle::CE_ScrollBarFirst, 464},
    {sipName_CE_ScrollBarLast, QStyle::CE_ScrollBarLast, 464},
    {sipName_CE_ScrollBarSlider, QStyle::CE_ScrollBarSlider, 464},
    {sipName_CE_ScrollBarSubLine, QStyle::CE_ScrollBarSubLine, 464},
    {sipName_CE_ScrollBarSubPage, QStyle::CE_ScrollBarSubPage, 464},
    {sipName_CE_ShapedFrame, QStyle::CE_ShapedFrame, 464},
    {sipName_CE_SizeGrip, QStyle::CE_SizeGrip, 464},
    {sipName_CE_Splitter, QStyle::CE_Splitter, 464},
    {sipName_CE_TabBarTab, QStyle::CE_TabBarTab, 464},
    {sipName_CE_TabBarTabLabel, QStyle::CE_TabBarTabLabel, 464},
    {sipName_CE_TabBarTabShape, QStyle::CE_TabBarTabShape, 464},
    {sipName_CE_ToolBar, QStyle::CE_ToolBar, 464},
    {sipName_CE_ToolBoxTab, QStyle::CE_ToolBoxTab, 464},
    {sipName_CE_ToolBoxTabLabel, QStyle::CE_ToolBoxTabLabel, 464},
    {sipName_CE_ToolBoxTabShape, QStyle::CE_ToolBoxTabShape, 464},
    {sipName_CE_ToolButtonLabel, QStyle::CE_ToolButtonLabel, 464},
    {sipName_CT_CheckBox, QStyle::CT_CheckBox, 463},
    {sipName_CT_ComboBox, QStyle::CT_ComboBox, 463},
    {sipName_CT_CustomBase, QStyle::CT_CustomBase, 463},
    {sipName_CT_DialogButtons, QStyle::CT_DialogButtons, 463},
    {sipName_CT_GroupBox, QStyle::CT_GroupBox, 463},
    {sipName_CT_HeaderSection, QStyle::CT_HeaderSection, 463},
    {sipName_CT_ItemViewItem, QStyle::CT_ItemViewItem, 463},
    {sipName_CT_LineEdit, QStyle::CT_LineEdit, 463},
    {sipName_CT_MdiControls, QStyle::CT_MdiControls, 463},
    {sipName_CT_Menu, QStyle::CT_Menu, 463},
    {sipName_CT_MenuBar, QStyle::CT_MenuBar, 463},
    {sipName_CT_MenuBarItem, QStyle::CT_MenuBarItem, 463},
    {sipName_CT_MenuItem, QStyle::CT_MenuItem, 463},
    {sipName_CT_ProgressBar, QStyle::CT_ProgressBar, 463},
    {sipName_CT_PushButton, QStyle::CT_PushButton, 463},
    {sipName_CT_Q3DockWindow, QStyle::CT_Q3DockWindow, 463},
    {sipName_CT_Q3Header, QStyle::CT_Q3Header, 463},
    {sipName_CT_RadioButton, QStyle::CT_RadioButton, 463},
    {sipName_CT_ScrollBar, QStyle::CT_ScrollBar, 463},
    {sipName_CT_SizeGrip, QStyle::CT_SizeGrip, 463},
    {sipName_CT_Slider, QStyle::CT_Slider, 463},
    {sipName_CT_SpinBox, QStyle::CT_SpinBox, 463},
    {sipName_CT_Splitter, QStyle::CT_Splitter, 463},
    {sipName_CT_TabBarTab, QStyle::CT_TabBarTab, 463},
    {sipName_CT_TabWidget, QStyle::CT_TabWidget, 463},
    {sipName_CT_ToolButton, QStyle::CT_ToolButton, 463},
    {sipName_PE_CustomBase, QStyle::PE_CustomBase, 466},
    {sipName_PE_Frame, QStyle::PE_Frame, 466},
    {sipName_PE_FrameButtonBevel, QStyle::PE_FrameButtonBevel, 466},
    {sipName_PE_FrameButtonTool, QStyle::PE_FrameButtonTool, 466},
    {sipName_PE_FrameDefaultButton, QStyle::PE_FrameDefaultButton, 466},
    {sipName_PE_FrameDockWidget, QStyle::PE_FrameDockWidget, 466},
    {sipName_PE_FrameFocusRect, QStyle::PE_FrameFocusRect, 466},
    {sipName_PE_FrameGroupBox, QStyle::PE_FrameGroupBox, 466},
    {sipName_PE_FrameLineEdit, QStyle::PE_FrameLineEdit, 466},
    {sipName_PE_FrameMenu, QStyle::PE_FrameMenu, 466},
    {sipName_PE_FrameStatusBar, QStyle::PE_FrameStatusBar, 466},
    {sipName_PE_FrameStatusBarItem, QStyle::PE_FrameStatusBarItem, 466},
    {sipName_PE_FrameTabBarBase, QStyle::PE_FrameTabBarBase, 466},
    {sipName_PE_FrameTabWidget, QStyle::PE_FrameTabWidget, 466},
    {sipName_PE_FrameWindow, QStyle::PE_FrameWindow, 466},
    {sipName_PE_IndicatorArrowDown, QStyle::PE_IndicatorArrowDown, 466},
    {sipName_PE_IndicatorArrowLeft, QStyle::PE_IndicatorArrowLeft, 466},
    {sipName_PE_IndicatorArrowRight, QStyle::PE_IndicatorArrowRight, 466},
    {sipName_PE_IndicatorArrowUp, QStyle::PE_IndicatorArrowUp, 466},
    {sipName_PE_IndicatorBranch, QStyle::PE_IndicatorBranch, 466},
    {sipName_PE_IndicatorButtonDropDown, QStyle::PE_IndicatorButtonDropDown, 466},
    {sipName_PE_IndicatorCheckBox, QStyle::PE_IndicatorCheckBox, 466},
    {sipName_PE_IndicatorColumnViewArrow, QStyle::PE_IndicatorColumnViewArrow, 466},
    {sipName_PE_IndicatorDockWidgetResizeHandle, QStyle::PE_IndicatorDockWidgetResizeHandle, 466},
    {sipName_PE_IndicatorHeaderArrow, QStyle::PE_IndicatorHeaderArrow, 466},
    {sipName_PE_IndicatorItemViewItemCheck, QStyle::PE_IndicatorItemViewItemCheck, 466},
    {sipName_PE_IndicatorItemViewItemDrop, QStyle::PE_IndicatorItemViewItemDrop, 466},
    {sipName_PE_IndicatorMenuCheckMark, QStyle::PE_IndicatorMenuCheckMark, 466},
    {sipName_PE_IndicatorProgressChunk, QStyle::PE_IndicatorProgressChunk, 466},
    {sipName_PE_IndicatorRadioButton, QStyle::PE_IndicatorRadioButton, 466},
    {sipName_PE_IndicatorSpinDown, QStyle::PE_IndicatorSpinDown, 466},
    {sipName_PE_IndicatorSpinMinus, QStyle::PE_IndicatorSpinMinus, 466},
    {sipName_PE_IndicatorSpinPlus, QStyle::PE_IndicatorSpinPlus, 466},
    {sipName_PE_IndicatorSpinUp, QStyle::PE_IndicatorSpinUp, 466},
    {sipName_PE_IndicatorTabClose, QStyle::PE_IndicatorTabClose, 466},
    {sipName_PE_IndicatorTabTear, QStyle::PE_IndicatorTabTear, 466},
    {sipName_PE_IndicatorToolBarHandle, QStyle::PE_IndicatorToolBarHandle, 466},
    {sipName_PE_IndicatorToolBarSeparator, QStyle::PE_IndicatorToolBarSeparator, 466},
    {sipName_PE_IndicatorViewItemCheck, QStyle::PE_IndicatorViewItemCheck, 466},
    {sipName_PE_PanelButtonBevel, QStyle::PE_PanelButtonBevel, 466},
    {sipName_PE_PanelButtonCommand, QStyle::PE_PanelButtonCommand, 466},
    {sipName_PE_PanelButtonTool, QStyle::PE_PanelButtonTool, 466},
    {sipName_PE_PanelItemViewItem, QStyle::PE_PanelItemViewItem, 466},
    {sipName_PE_PanelItemViewRow, QStyle::PE_PanelItemViewRow, 466},
    {sipName_PE_PanelLineEdit, QStyle::PE_PanelLineEdit, 466},
    {sipName_PE_PanelMenu, QStyle::PE_PanelMenu, 466},
    {sipName_PE_PanelMenuBar, QStyle::PE_PanelMenuBar, 466},
    {sipName_PE_PanelScrollAreaCorner, QStyle::PE_PanelScrollAreaCorner, 466},
    {sipName_PE_PanelStatusBar, QStyle::PE_PanelStatusBar, 466},
    {sipName_PE_PanelTipLabel, QStyle::PE_PanelTipLabel, 466},
    {sipName_PE_PanelToolBar, QStyle::PE_PanelToolBar, 466},
    {sipName_PE_Q3CheckListController, QStyle::PE_Q3CheckListController, 466},
    {sipName_PE_Q3CheckListExclusiveIndicator, QStyle::PE_Q3CheckListExclusiveIndicator, 466},
    {sipName_PE_Q3CheckListIndicator, QStyle::PE_Q3CheckListIndicator, 466},
    {sipName_PE_Q3DockWindowSeparator, QStyle::PE_Q3DockWindowSeparator, 466},
    {sipName_PE_Q3Separator, QStyle::PE_Q3Separator, 466},
    {sipName_PE_Widget, QStyle::PE_Widget, 466},
    {sipName_PM_ButtonDefaultIndicator, QStyle::PM_ButtonDefaultIndicator, 465},
    {sipName_PM_ButtonIconSize, QStyle::PM_ButtonIconSize, 465},
    {sipName_PM_ButtonMargin, QStyle::PM_ButtonMargin, 465},
    {sipName_PM_ButtonShiftHorizontal, QStyle::PM_ButtonShiftHorizontal, 465},
    {sipName_PM_ButtonShiftVertical, QStyle::PM_ButtonShiftVertical, 465},
    {sipName_PM_CheckBoxLabelSpacing, QStyle::PM_CheckBoxLabelSpacing, 465},
    {sipName_PM_CheckListButtonSize, QStyle::PM_CheckListButtonSize, 465},
    {sipName_PM_CheckListControllerSize, QStyle::PM_CheckListControllerSize, 465},
    {sipName_PM_ComboBoxFrameWidth, QStyle::PM_ComboBoxFrameWidth, 465},
    {sipName_PM_CustomBase, QStyle::PM_CustomBase, 465},
    {sipName_PM_DefaultChildMargin, QStyle::PM_DefaultChildMargin, 465},
    {sipName_PM_DefaultFrameWidth, QStyle::PM_DefaultFrameWidth, 465},
    {sipName_PM_DefaultLayoutSpacing, QStyle::PM_DefaultLayoutSpacing, 465},
    {sipName_PM_DefaultTopLevelMargin, QStyle::PM_DefaultTopLevelMargin, 465},
    {sipName_PM_DialogButtonsButtonHeight, QStyle::PM_DialogButtonsButtonHeight, 465},
    {sipName_PM_DialogButtonsButtonWidth, QStyle::PM_DialogButtonsButtonWidth, 465},
    {sipName_PM_DialogButtonsSeparator, QStyle::PM_DialogButtonsSeparator, 465},
    {sipName_PM_DockWidgetFrameWidth, QStyle::PM_DockWidgetFrameWidth, 465},
    {sipName_PM_DockWidgetHandleExtent, QStyle::PM_DockWidgetHandleExtent, 465},
    {sipName_PM_DockWidgetSeparatorExtent, QStyle::PM_DockWidgetSeparatorExtent, 465},
    {sipName_PM_DockWidgetTitleBarButtonMargin, QStyle::PM_DockWidgetTitleBarButtonMargin, 465},
    {sipName_PM_DockWidgetTitleMargin, QStyle::PM_DockWidgetTitleMargin, 465},
    {sipName_PM_ExclusiveIndicatorHeight, QStyle::PM_ExclusiveIndicatorHeight, 465},
    {sipName_PM_ExclusiveIndicatorWidth, QStyle::PM_ExclusiveIndicatorWidth, 465},
    {sipName_PM_FocusFrameHMargin, QStyle::PM_FocusFrameHMargin, 465},
    {sipName_PM_FocusFrameVMargin, QStyle::PM_FocusFrameVMargin, 465},
    {sipName_PM_HeaderGripMargin, QStyle::PM_HeaderGripMargin, 465},
    {sipName_PM_HeaderMargin, QStyle::PM_HeaderMargin, 465},
    {sipName_PM_HeaderMarkSize, QStyle::PM_HeaderMarkSize, 465},
    {sipName_PM_IconViewIconSize, QStyle::PM_IconViewIconSize, 465},
    {sipName_PM_IndicatorHeight, QStyle::PM_IndicatorHeight, 465},
    {sipName_PM_IndicatorWidth, QStyle::PM_IndicatorWidth, 465},
    {sipName_PM_LargeIconSize, QStyle::PM_LargeIconSize, 465},
    {sipName_PM_LayoutBottomMargin, QStyle::PM_LayoutBottomMargin, 465},
    {sipName_PM_LayoutHorizontalSpacing, QStyle::PM_LayoutHorizontalSpacing, 465},
    {sipName_PM_LayoutLeftMargin, QStyle::PM_LayoutLeftMargin, 465},
    {sipName_PM_LayoutRightMargin, QStyle::PM_LayoutRightMargin, 465},
    {sipName_PM_LayoutTopMargin, QStyle::PM_LayoutTopMargin, 465},
    {sipName_PM_LayoutVerticalSpacing, QStyle::PM_LayoutVerticalSpacing, 465},
    {sipName_PM_ListViewIconSize, QStyle::PM_ListViewIconSize, 465},
    {sipName_PM_MDIFrameWidth, QStyle::PM_MDIFrameWidth, 465},
    {sipName_PM_MDIMinimizedWidth, QStyle::PM_MDIMinimizedWidth, 465},
    {sipName_PM_MaximumDragDistance, QStyle::PM_MaximumDragDistance, 465},
    {sipName_PM_MdiSubWindowFrameWidth, QStyle::PM_MdiSubWindowFrameWidth, 465},
    {sipName_PM_MdiSubWindowMinimizedWidth, QStyle::PM_MdiSubWindowMinimizedWidth, 465},
    {sipName_PM_MenuBarHMargin, QStyle::PM_MenuBarHMargin, 465},
    {sipName_PM_MenuBarItemSpacing, QStyle::PM_MenuBarItemSpacing, 465},
    {sipName_PM_MenuBarPanelWidth, QStyle::PM_MenuBarPanelWidth, 465},
    {sipName_PM_MenuBarVMargin, QStyle::PM_MenuBarVMargin, 465},
    {sipName_PM_MenuButtonIndicator, QStyle::PM_MenuButtonIndicator, 465},
    {sipName_PM_MenuDesktopFrameWidth, QStyle::PM_MenuDesktopFrameWidth, 465},
    {sipName_PM_MenuHMargin, QStyle::PM_MenuHMargin, 465},
    {sipName_PM_MenuPanelWidth, QStyle::PM_MenuPanelWidth, 465},
    {sipName_PM_MenuScrollerHeight, QStyle::PM_MenuScrollerHeight, 465},
    {sipName_PM_MenuTearoffHeight, QStyle::PM_MenuTearoffHeight, 465},
    {sipName_PM_MenuVMargin, QStyle::PM_MenuVMargin, 465},
    {sipName_PM_MessageBoxIconSize, QStyle::PM_MessageBoxIconSize, 465},
    {sipName_PM_ProgressBarChunkWidth, QStyle::PM_ProgressBarChunkWidth, 465},
    {sipName_PM_RadioButtonLabelSpacing, QStyle::PM_RadioButtonLabelSpacing, 465},
    {sipName_PM_ScrollBarExtent, QStyle::PM_ScrollBarExtent, 465},
    {sipName_PM_ScrollBarSliderMin, QStyle::PM_ScrollBarSliderMin, 465},
    {sipName_PM_ScrollView_ScrollBarSpacing, QStyle::PM_ScrollView_ScrollBarSpacing, 465},
    {sipName_PM_SizeGripSize, QStyle::PM_SizeGripSize, 465},
    {sipName_PM_SliderControlThickness, QStyle::PM_SliderControlThickness, 465},
    {sipName_PM_SliderLength, QStyle::PM_SliderLength, 465},
    {sipName_PM_SliderSpaceAvailable, QStyle::PM_SliderSpaceAvailable, 465},
    {sipName_PM_SliderThickness, QStyle::PM_SliderThickness, 465},
    {sipName_PM_SliderTickmarkOffset, QStyle::PM_SliderTickmarkOffset, 465},
    {sipName_PM_SmallIconSize, QStyle::PM_SmallIconSize, 465},
    {sipName_PM_SpinBoxFrameWidth, QStyle::PM_SpinBoxFrameWidth, 465},
    {sipName_PM_SpinBoxSliderHeight, QStyle::PM_SpinBoxSliderHeight, 465},
    {sipName_PM_SplitterWidth, QStyle::PM_SplitterWidth, 465},
    {sipName_PM_SubMenuOverlap, QStyle::PM_SubMenuOverlap, 465},
    {sipName_PM_TabBarBaseHeight, QStyle::PM_TabBarBaseHeight, 465},
    {sipName_PM_TabBarBaseOverlap, QStyle::PM_TabBarBaseOverlap, 465},
    {sipName_PM_TabBarIconSize, QStyle::PM_TabBarIconSize, 465},
    {sipName_PM_TabBarScrollButtonWidth, QStyle::PM_TabBarScrollButtonWidth, 465},
    {sipName_PM_TabBarTabHSpace, QStyle::PM_TabBarTabHSpace, 465},
    {sipName_PM_TabBarTabOverlap, QStyle::PM_TabBarTabOverlap, 465},
    {sipName_PM_TabBarTabShiftHorizontal, QStyle::PM_TabBarTabShiftHorizontal, 465},
    {sipName_PM_TabBarTabShiftVertical, QStyle::PM_TabBarTabShiftVertical, 465},
    {sipName_PM_TabBarTabVSpace, QStyle::PM_TabBarTabVSpace, 465},
    {sipName_PM_TabBar_ScrollButtonOverlap, QStyle::PM_TabBar_ScrollButtonOverlap, 465},
    {sipName_PM_TabCloseIndicatorHeight, QStyle::PM_TabCloseIndicatorHeight, 465},
    {sipName_PM_TabCloseIndicatorWidth, QStyle::PM_TabCloseIndicatorWidth, 465},
    {sipName_PM_TextCursorWidth, QStyle::PM_TextCursorWidth, 465},
    {sipName_PM_TitleBarHeight, QStyle::PM_TitleBarHeight, 465},
    {sipName_PM_ToolBarExtensionExtent, QStyle::PM_ToolBarExtensionExtent, 465},
    {sipName_PM_ToolBarFrameWidth, QStyle::PM_ToolBarFrameWidth, 465},
    {sipName_PM_ToolBarHandleExtent, QStyle::PM_ToolBarHandleExtent, 465},
    {sipName_PM_ToolBarIconSize, QStyle::PM_ToolBarIconSize, 465},
    {sipName_PM_ToolBarItemMargin, QStyle::PM_ToolBarItemMargin, 465},
    {sipName_PM_ToolBarItemSpacing, QStyle::PM_ToolBarItemSpacing, 465},
    {sipName_PM_ToolBarSeparatorExtent, QStyle::PM_ToolBarSeparatorExtent, 465},
    {sipName_PM_ToolTipLabelFrameWidth, QStyle::PM_ToolTipLabelFrameWidth, 465},
    {sipName_RSIP_OnMouseClick, QStyle::RSIP_OnMouseClick, 467},
    {sipName_RSIP_OnMouseClickAndAlreadyFocused, QStyle::RSIP_OnMouseClickAndAlreadyFocused, 467},
    {sipName_SC_All, QStyle::SC_All, 472},
    {sipName_SC_ComboBoxArrow, QStyle::SC_ComboBoxArrow, 472},
    {sipName_SC_ComboBoxEditField, QStyle::SC_ComboBoxEditField, 472},
    {sipName_SC_ComboBoxFrame, QStyle::SC_ComboBoxFrame, 472},
    {sipName_SC_ComboBoxListBoxPopup, QStyle::SC_ComboBoxListBoxPopup, 472},
    {sipName_SC_CustomBase, QStyle::SC_CustomBase, 472},
    {sipName_SC_DialGroove, QStyle::SC_DialGroove, 472},
    {sipName_SC_DialHandle, QStyle::SC_DialHandle, 472},
    {sipName_SC_DialTickmarks, QStyle::SC_DialTickmarks, 472},
    {sipName_SC_GroupBoxCheckBox, QStyle::SC_GroupBoxCheckBox, 472},
    {sipName_SC_GroupBoxContents, QStyle::SC_GroupBoxContents, 472},
    {sipName_SC_GroupBoxFrame, QStyle::SC_GroupBoxFrame, 472},
    {sipName_SC_GroupBoxLabel, QStyle::SC_GroupBoxLabel, 472},
    {sipName_SC_MdiCloseButton, QStyle::SC_MdiCloseButton, 472},
    {sipName_SC_MdiMinButton, QStyle::SC_MdiMinButton, 472},
    {sipName_SC_MdiNormalButton, QStyle::SC_MdiNormalButton, 472},
    {sipName_SC_None, QStyle::SC_None, 472},
    {sipName_SC_Q3ListView, QStyle::SC_Q3ListView, 472},
    {sipName_SC_Q3ListViewBranch, QStyle::SC_Q3ListViewBranch, 472},
    {sipName_SC_Q3ListViewExpand, QStyle::SC_Q3ListViewExpand, 472},
    {sipName_SC_ScrollBarAddLine, QStyle::SC_ScrollBarAddLine, 472},
    {sipName_SC_ScrollBarAddPage, QStyle::SC_ScrollBarAddPage, 472},
    {sipName_SC_ScrollBarFirst, QStyle::SC_ScrollBarFirst, 472},
    {sipName_SC_ScrollBarGroove, QStyle::SC_ScrollBarGroove, 472},
    {sipName_SC_ScrollBarLast, QStyle::SC_ScrollBarLast, 472},
    {sipName_SC_ScrollBarSlider, QStyle::SC_ScrollBarSlider, 472},
    {sipName_SC_ScrollBarSubLine, QStyle::SC_ScrollBarSubLine, 472},
    {sipName_SC_ScrollBarSubPage, QStyle::SC_ScrollBarSubPage, 472},
    {sipName_SC_SliderGroove, QStyle::SC_SliderGroove, 472},
    {sipName_SC_SliderHandle, QStyle::SC_SliderHandle, 472},
    {sipName_SC_SliderTickmarks, QStyle::SC_SliderTickmarks, 472},
    {sipName_SC_SpinBoxDown, QStyle::SC_SpinBoxDown, 472},
    {sipName_SC_SpinBoxEditField, QStyle::SC_SpinBoxEditField, 472},
    {sipName_SC_SpinBoxFrame, QStyle::SC_SpinBoxFrame, 472},
    {sipName_SC_SpinBoxUp, QStyle::SC_SpinBoxUp, 472},
    {sipName_SC_TitleBarCloseButton, QStyle::SC_TitleBarCloseButton, 472},
    {sipName_SC_TitleBarContextHelpButton, QStyle::SC_TitleBarContextHelpButton, 472},
    {sipName_SC_TitleBarLabel, QStyle::SC_TitleBarLabel, 472},
    {sipName_SC_TitleBarMaxButton, QStyle::SC_TitleBarMaxButton, 472},
    {sipName_SC_TitleBarMinButton, QStyle::SC_TitleBarMinButton, 472},
    {sipName_SC_TitleBarNormalButton, QStyle::SC_TitleBarNormalButton, 472},
    {sipName_SC_TitleBarShadeButton, QStyle::SC_TitleBarShadeButton, 472},
    {sipName_SC_TitleBarSysMenu, QStyle::SC_TitleBarSysMenu, 472},
    {sipName_SC_TitleBarUnshadeButton, QStyle::SC_TitleBarUnshadeButton, 472},
    {sipName_SC_ToolButton, QStyle::SC_ToolButton, 472},
    {sipName_SC_ToolButtonMenu, QStyle::SC_ToolButtonMenu, 472},
    {sipName_SE_CheckBoxClickRect, QStyle::SE_CheckBoxClickRect, 474},
    {sipName_SE_CheckBoxContents, QStyle::SE_CheckBoxContents, 474},
    {sipName_SE_CheckBoxFocusRect, QStyle::SE_CheckBoxFocusRect, 474},
    {sipName_SE_CheckBoxIndicator, QStyle::SE_CheckBoxIndicator, 474},
    {sipName_SE_CheckBoxLayoutItem, QStyle::SE_CheckBoxLayoutItem, 474},
    {sipName_SE_ComboBoxFocusRect, QStyle::SE_ComboBoxFocusRect, 474},
    {sipName_SE_ComboBoxLayoutItem, QStyle::SE_ComboBoxLayoutItem, 474},
    {sipName_SE_CustomBase, QStyle::SE_CustomBase, 474},
    {sipName_SE_DateTimeEditLayoutItem, QStyle::SE_DateTimeEditLayoutItem, 474},
    {sipName_SE_DialogButtonAbort, QStyle::SE_DialogButtonAbort, 474},
    {sipName_SE_DialogButtonAccept, QStyle::SE_DialogButtonAccept, 474},
    {sipName_SE_DialogButtonAll, QStyle::SE_DialogButtonAll, 474},
    {sipName_SE_DialogButtonApply, QStyle::SE_DialogButtonApply, 474},
    {sipName_SE_DialogButtonBoxLayoutItem, QStyle::SE_DialogButtonBoxLayoutItem, 474},
    {sipName_SE_DialogButtonCustom, QStyle::SE_DialogButtonCustom, 474},
    {sipName_SE_DialogButtonHelp, QStyle::SE_DialogButtonHelp, 474},
    {sipName_SE_DialogButtonIgnore, QStyle::SE_DialogButtonIgnore, 474},
    {sipName_SE_DialogButtonReject, QStyle::SE_DialogButtonReject, 474},
    {sipName_SE_DialogButtonRetry, QStyle::SE_DialogButtonRetry, 474},
    {sipName_SE_DockWidgetCloseButton, QStyle::SE_DockWidgetCloseButton, 474},
    {sipName_SE_DockWidgetFloatButton, QStyle::SE_DockWidgetFloatButton, 474},
    {sipName_SE_DockWidgetIcon, QStyle::SE_DockWidgetIcon, 474},
    {sipName_SE_DockWidgetTitleBarText, QStyle::SE_DockWidgetTitleBarText, 474},
    {sipName_SE_FrameContents, QStyle::SE_FrameContents, 474},
    {sipName_SE_FrameLayoutItem, QStyle::SE_FrameLayoutItem, 474},
    {sipName_SE_GroupBoxLayoutItem, QStyle::SE_GroupBoxLayoutItem, 474},
    {sipName_SE_HeaderArrow, QStyle::SE_HeaderArrow, 474},
    {sipName_SE_HeaderLabel, QStyle::SE_HeaderLabel, 474},
    {sipName_SE_ItemViewItemCheckIndicator, QStyle::SE_ItemViewItemCheckIndicator, 474},
    {sipName_SE_ItemViewItemDecoration, QStyle::SE_ItemViewItemDecoration, 474},
    {sipName_SE_ItemViewItemFocusRect, QStyle::SE_ItemViewItemFocusRect, 474},
    {sipName_SE_ItemViewItemText, QStyle::SE_ItemViewItemText, 474},
    {sipName_SE_LabelLayoutItem, QStyle::SE_LabelLayoutItem, 474},
    {sipName_SE_LineEditContents, QStyle::SE_LineEditContents, 474},
    {sipName_SE_ProgressBarContents, QStyle::SE_ProgressBarContents, 474},
    {sipName_SE_ProgressBarGroove, QStyle::SE_ProgressBarGroove, 474},
    {sipName_SE_ProgressBarLabel, QStyle::SE_ProgressBarLabel, 474},
    {sipName_SE_ProgressBarLayoutItem, QStyle::SE_ProgressBarLayoutItem, 474},
    {sipName_SE_PushButtonContents, QStyle::SE_PushButtonContents, 474},
    {sipName_SE_PushButtonFocusRect, QStyle::SE_PushButtonFocusRect, 474},
    {sipName_SE_PushButtonLayoutItem, QStyle::SE_PushButtonLayoutItem, 474},
    {sipName_SE_Q3DockWindowHandleRect, QStyle::SE_Q3DockWindowHandleRect, 474},
    {sipName_SE_RadioButtonClickRect, QStyle::SE_RadioButtonClickRect, 474},
    {sipName_SE_RadioButtonContents, QStyle::SE_RadioButtonContents, 474},
    {sipName_SE_RadioButtonFocusRect, QStyle::SE_RadioButtonFocusRect, 474},
    {sipName_SE_RadioButtonIndicator, QStyle::SE_RadioButtonIndicator, 474},
    {sipName_SE_RadioButtonLayoutItem, QStyle::SE_RadioButtonLayoutItem, 474},
    {sipName_SE_ShapedFrameContents, QStyle::SE_ShapedFrameContents, 474},
    {sipName_SE_SliderFocusRect, QStyle::SE_SliderFocusRect, 474},
    {sipName_SE_SliderLayoutItem, QStyle::SE_SliderLayoutItem, 474},
    {sipName_SE_SpinBoxLayoutItem, QStyle::SE_SpinBoxLayoutItem, 474},
    {sipName_SE_TabBarTabLeftButton, QStyle::SE_TabBarTabLeftButton, 474},
    {sipName_SE_TabBarTabRightButton, QStyle::SE_TabBarTabRightButton, 474},
    {sipName_SE_TabBarTabText, QStyle::SE_TabBarTabText, 474},
    {sipName_SE_TabBarTearIndicator, QStyle::SE_TabBarTearIndicator, 474},
    {sipName_SE_TabWidgetLayoutItem, QStyle::SE_TabWidgetLayoutItem, 474},
    {sipName_SE_TabWidgetLeftCorner, QStyle::SE_TabWidgetLeftCorner, 474},
    {sipName_SE_TabWidgetRightCorner, QStyle::SE_TabWidgetRightCorner, 474},
    {sipName_SE_TabWidgetTabBar, QStyle::SE_TabWidgetTabBar, 474},
    {sipName_SE_TabWidgetTabContents, QStyle::SE_TabWidgetTabContents, 474},
    {sipName_SE_TabWidgetTabPane, QStyle::SE_TabWidgetTabPane, 474},
    {sipName_SE_ToolBarHandle, QStyle::SE_ToolBarHandle, 474},
    {sipName_SE_ToolBoxTabContents, QStyle::SE_ToolBoxTabContents, 474},
    {sipName_SE_ToolButtonLayoutItem, QStyle::SE_ToolButtonLayoutItem, 474},
    {sipName_SE_TreeViewDisclosureItem, QStyle::SE_TreeViewDisclosureItem, 474},
    {sipName_SE_ViewItemCheckIndicator, QStyle::SE_ViewItemCheckIndicator, 474},
    {sipName_SH_BlinkCursorWhenTextSelected, QStyle::SH_BlinkCursorWhenTextSelected, 471},
    {sipName_SH_Button_FocusPolicy, QStyle::SH_Button_FocusPolicy, 471},
    {sipName_SH_ComboBox_LayoutDirection, QStyle::SH_ComboBox_LayoutDirection, 471},
    {sipName_SH_ComboBox_ListMouseTracking, QStyle::SH_ComboBox_ListMouseTracking, 471},
    {sipName_SH_ComboBox_Popup, QStyle::SH_ComboBox_Popup, 471},
    {sipName_SH_ComboBox_PopupFrameStyle, QStyle::SH_ComboBox_PopupFrameStyle, 471},
    {sipName_SH_CustomBase, QStyle::SH_CustomBase, 471},
    {sipName_SH_Dial_BackgroundRole, QStyle::SH_Dial_BackgroundRole, 471},
    {sipName_SH_DialogButtonBox_ButtonsHaveIcons, QStyle::SH_DialogButtonBox_ButtonsHaveIcons, 471},
    {sipName_SH_DialogButtonLayout, QStyle::SH_DialogButtonLayout, 471},
    {sipName_SH_DialogButtons_DefaultButton, QStyle::SH_DialogButtons_DefaultButton, 471},
    {sipName_SH_DitherDisabledText, QStyle::SH_DitherDisabledText, 471},
    {sipName_SH_DockWidget_ButtonsHaveFrame, QStyle::SH_DockWidget_ButtonsHaveFrame, 471},
    {sipName_SH_DrawMenuBarSeparator, QStyle::SH_DrawMenuBarSeparator, 471},
    {sipName_SH_EtchDisabledText, QStyle::SH_EtchDisabledText, 471},
    {sipName_SH_FocusFrame_AboveWidget, QStyle::SH_FocusFrame_AboveWidget, 471},
    {sipName_SH_FocusFrame_Mask, QStyle::SH_FocusFrame_Mask, 471},
    {sipName_SH_FontDialog_SelectAssociatedText, QStyle::SH_FontDialog_SelectAssociatedText, 471},
    {sipName_SH_FormLayoutFieldGrowthPolicy, QStyle::SH_FormLayoutFieldGrowthPolicy, 471},
    {sipName_SH_FormLayoutFormAlignment, QStyle::SH_FormLayoutFormAlignment, 471},
    {sipName_SH_FormLayoutLabelAlignment, QStyle::SH_FormLayoutLabelAlignment, 471},
    {sipName_SH_FormLayoutWrapPolicy, QStyle::SH_FormLayoutWrapPolicy, 471},
    {sipName_SH_GroupBox_TextLabelColor, QStyle::SH_GroupBox_TextLabelColor, 471},
    {sipName_SH_GroupBox_TextLabelVerticalAlignment, QStyle::SH_GroupBox_TextLabelVerticalAlignment, 471},
    {sipName_SH_Header_ArrowAlignment, QStyle::SH_Header_ArrowAlignment, 471},
    {sipName_SH_ItemView_ActivateItemOnSingleClick, QStyle::SH_ItemView_ActivateItemOnSingleClick, 471},
    {sipName_SH_ItemView_ArrowKeysNavigateIntoChildren, QStyle::SH_ItemView_ArrowKeysNavigateIntoChildren, 471},
    {sipName_SH_ItemView_ChangeHighlightOnFocus, QStyle::SH_ItemView_ChangeHighlightOnFocus, 471},
    {sipName_SH_ItemView_DrawDelegateFrame, QStyle::SH_ItemView_DrawDelegateFrame, 471},
    {sipName_SH_ItemView_EllipsisLocation, QStyle::SH_ItemView_EllipsisLocation, 471},
    {sipName_SH_ItemView_MovementWithoutUpdatingSelection, QStyle::SH_ItemView_MovementWithoutUpdatingSelection, 471},
    {sipName_SH_ItemView_PaintAlternatingRowColorsForEmptyArea, QStyle::SH_ItemView_PaintAlternatingRowColorsForEmptyArea, 471},
    {sipName_SH_ItemView_ShowDecorationSelected, QStyle::SH_ItemView_ShowDecorationSelected, 471},
    {sipName_SH_LineEdit_PasswordCharacter, QStyle::SH_LineEdit_PasswordCharacter, 471},
    {sipName_SH_MainWindow_SpaceBelowMenuBar, QStyle::SH_MainWindow_SpaceBelowMenuBar, 471},
    {sipName_SH_MenuBar_AltKeyNavigation, QStyle::SH_MenuBar_AltKeyNavigation, 471},
    {sipName_SH_MenuBar_DismissOnSecondClick, QStyle::SH_MenuBar_DismissOnSecondClick, 471},
    {sipName_SH_MenuBar_MouseTracking, QStyle::SH_MenuBar_MouseTracking, 471},
    {sipName_SH_Menu_AllowActiveAndDisabled, QStyle::SH_Menu_AllowActiveAndDisabled, 471},
    {sipName_SH_Menu_FadeOutOnHide, QStyle::SH_Menu_FadeOutOnHide, 471},
    {sipName_SH_Menu_FillScreenWithScroll, QStyle::SH_Menu_FillScreenWithScroll, 471},
    {sipName_SH_Menu_FlashTriggeredItem, QStyle::SH_Menu_FlashTriggeredItem, 471},
    {sipName_SH_Menu_KeyboardSearch, QStyle::SH_Menu_KeyboardSearch, 471},
    {sipName_SH_Menu_Mask, QStyle::SH_Menu_Mask, 471},
    {sipName_SH_Menu_MouseTracking, QStyle::SH_Menu_MouseTracking, 471},
    {sipName_SH_Menu_Scrollable, QStyle::SH_Menu_Scrollable, 471},
    {sipName_SH_Menu_SelectionWrap, QStyle::SH_Menu_SelectionWrap, 471},
    {sipName_SH_Menu_SloppySubMenus, QStyle::SH_Menu_SloppySubMenus, 471},
    {sipName_SH_Menu_SpaceActivatesItem, QStyle::SH_Menu_SpaceActivatesItem, 471},
    {sipName_SH_Menu_SubMenuPopupDelay, QStyle::SH_Menu_SubMenuPopupDelay, 471},
    {sipName_SH_MessageBox_CenterButtons, QStyle::SH_MessageBox_CenterButtons, 471},
    {sipName_SH_MessageBox_TextInteractionFlags, QStyle::SH_MessageBox_TextInteractionFlags, 471},
    {sipName_SH_MessageBox_UseBorderForButtonSpacing, QStyle::SH_MessageBox_UseBorderForButtonSpacing, 471},
    {sipName_SH_PrintDialog_RightAlignButtons, QStyle::SH_PrintDialog_RightAlignButtons, 471},
    {sipName_SH_ProgressDialog_CenterCancelButton, QStyle::SH_ProgressDialog_CenterCancelButton, 471},
    {sipName_SH_ProgressDialog_TextLabelAlignment, QStyle::SH_ProgressDialog_TextLabelAlignment, 471},
    {sipName_SH_Q3ListViewExpand_SelectMouseType, QStyle::SH_Q3ListViewExpand_SelectMouseType, 471},
    {sipName_SH_RequestSoftwareInputPanel, QStyle::SH_RequestSoftwareInputPanel, 471},
    {sipName_SH_RichText_FullWidthSelection, QStyle::SH_RichText_FullWidthSelection, 471},
    {sipName_SH_RubberBand_Mask, QStyle::SH_RubberBand_Mask, 471},
    {sipName_SH_ScrollBar_ContextMenu, QStyle::SH_ScrollBar_ContextMenu, 471},
    {sipName_SH_ScrollBar_LeftClickAbsolutePosition, QStyle::SH_ScrollBar_LeftClickAbsolutePosition, 471},
    {sipName_SH_ScrollBar_MiddleClickAbsolutePosition, QStyle::SH_ScrollBar_MiddleClickAbsolutePosition, 471},
    {sipName_SH_ScrollBar_RollBetweenButtons, QStyle::SH_ScrollBar_RollBetweenButtons, 471},
    {sipName_SH_ScrollBar_ScrollWhenPointerLeavesControl, QStyle::SH_ScrollBar_ScrollWhenPointerLeavesControl, 471},
    {sipName_SH_ScrollBar_StopMouseOverSlider, QStyle::SH_ScrollBar_StopMouseOverSlider, 471},
    {sipName_SH_ScrollView_FrameOnlyAroundContents, QStyle::SH_ScrollView_FrameOnlyAroundContents, 471},
    {sipName_SH_Slider_AbsoluteSetButtons, QStyle::SH_Slider_AbsoluteSetButtons, 471},
    {sipName_SH_Slider_PageSetButtons, QStyle::SH_Slider_PageSetButtons, 471},
    {sipName_SH_Slider_SloppyKeyEvents, QStyle::SH_Slider_SloppyKeyEvents, 471},
    {sipName_SH_Slider_SnapToValue, QStyle::SH_Slider_SnapToValue, 471},
    {sipName_SH_Slider_StopMouseOverSlider, QStyle::SH_Slider_StopMouseOverSlider, 471},
    {sipName_SH_SpellCheckUnderlineStyle, QStyle::SH_SpellCheckUnderlineStyle, 471},
    {sipName_SH_SpinBox_AnimateButton, QStyle::SH_SpinBox_AnimateButton, 471},
    {sipName_SH_SpinBox_ClickAutoRepeatRate, QStyle::SH_SpinBox_ClickAutoRepeatRate, 471},
    {sipName_SH_SpinBox_ClickAutoRepeatThreshold, QStyle::SH_SpinBox_ClickAutoRepeatThreshold, 471},
    {sipName_SH_SpinBox_KeyPressAutoRepeatRate, QStyle::SH_SpinBox_KeyPressAutoRepeatRate, 471},
    {sipName_SH_SpinControls_DisableOnBounds, QStyle::SH_SpinControls_DisableOnBounds, 471},
    {sipName_SH_TabBar_Alignment, QStyle::SH_TabBar_Alignment, 471},
    {sipName_SH_TabBar_CloseButtonPosition, QStyle::SH_TabBar_CloseButtonPosition, 471},
    {sipName_SH_TabBar_ElideMode, QStyle::SH_TabBar_ElideMode, 471},
    {sipName_SH_TabBar_PreferNoArrows, QStyle::SH_TabBar_PreferNoArrows, 471},
    {sipName_SH_TabBar_SelectMouseType, QStyle::SH_TabBar_SelectMouseType, 471},
    {sipName_SH_TabWidget_DefaultTabPosition, QStyle::SH_TabWidget_DefaultTabPosition, 471},
    {sipName_SH_Table_GridLineColor, QStyle::SH_Table_GridLineColor, 471},
    {sipName_SH_TextControl_FocusIndicatorTextCharFormat, QStyle::SH_TextControl_FocusIndicatorTextCharFormat, 471},
    {sipName_SH_TitleBar_AutoRaise, QStyle::SH_TitleBar_AutoRaise, 471},
    {sipName_SH_TitleBar_ModifyNotification, QStyle::SH_TitleBar_ModifyNotification, 471},
    {sipName_SH_TitleBar_NoBorder, QStyle::SH_TitleBar_NoBorder, 471},
    {sipName_SH_ToolBar_Movable, QStyle::SH_ToolBar_Movable, 471},
    {sipName_SH_ToolBox_SelectedPageTitleBold, QStyle::SH_ToolBox_SelectedPageTitleBold, 471},
    {sipName_SH_ToolButtonStyle, QStyle::SH_ToolButtonStyle, 471},
    {sipName_SH_ToolButton_PopupDelay, QStyle::SH_ToolButton_PopupDelay, 471},
    {sipName_SH_ToolTipLabel_Opacity, QStyle::SH_ToolTipLabel_Opacity, 471},
    {sipName_SH_ToolTip_Mask, QStyle::SH_ToolTip_Mask, 471},
    {sipName_SH_UnderlineShortcut, QStyle::SH_UnderlineShortcut, 471},
    {sipName_SH_Widget_ShareActivation, QStyle::SH_Widget_ShareActivation, 471},
    {sipName_SH_WindowFrame_Mask, QStyle::SH_WindowFrame_Mask, 471},
    {sipName_SH_WizardStyle, QStyle::SH_WizardStyle, 471},
    {sipName_SH_Workspace_FillSpaceOnMaximize, QStyle::SH_Workspace_FillSpaceOnMaximize, 471},
    {sipName_SP_ArrowBack, QStyle::SP_ArrowBack, 468},
    {sipName_SP_ArrowDown, QStyle::SP_ArrowDown, 468},
    {sipName_SP_ArrowForward, QStyle::SP_ArrowForward, 468},
    {sipName_SP_ArrowLeft, QStyle::SP_ArrowLeft, 468},
    {sipName_SP_ArrowRight, QStyle::SP_ArrowRight, 468},
    {sipName_SP_ArrowUp, QStyle::SP_ArrowUp, 468},
    {sipName_SP_BrowserReload, QStyle::SP_BrowserReload, 468},
    {sipName_SP_BrowserStop, QStyle::SP_BrowserStop, 468},
    {sipName_SP_CommandLink, QStyle::SP_CommandLink, 468},
    {sipName_SP_ComputerIcon, QStyle::SP_ComputerIcon, 468},
    {sipName_SP_CustomBase, QStyle::SP_CustomBase, 468},
    {sipName_SP_DesktopIcon, QStyle::SP_DesktopIcon, 468},
    {sipName_SP_DialogApplyButton, QStyle::SP_DialogApplyButton, 468},
    {sipName_SP_DialogCancelButton, QStyle::SP_DialogCancelButton, 468},
    {sipName_SP_DialogCloseButton, QStyle::SP_DialogCloseButton, 468},
    {sipName_SP_DialogDiscardButton, QStyle::SP_DialogDiscardButton, 468},
    {sipName_SP_DialogHelpButton, QStyle::SP_DialogHelpButton, 468},
    {sipName_SP_DialogNoButton, QStyle::SP_DialogNoButton, 468},
    {sipName_SP_DialogOkButton, QStyle::SP_DialogOkButton, 468},
    {sipName_SP_DialogOpenButton, QStyle::SP_DialogOpenButton, 468},
    {sipName_SP_DialogResetButton, QStyle::SP_DialogResetButton, 468},
    {sipName_SP_DialogSaveButton, QStyle::SP_DialogSaveButton, 468},
    {sipName_SP_DialogYesButton, QStyle::SP_DialogYesButton, 468},
    {sipName_SP_DirClosedIcon, QStyle::SP_DirClosedIcon, 468},
    {sipName_SP_DirHomeIcon, QStyle::SP_DirHomeIcon, 468},
    {sipName_SP_DirIcon, QStyle::SP_DirIcon, 468},
    {sipName_SP_DirLinkIcon, QStyle::SP_DirLinkIcon, 468},
    {sipName_SP_DirOpenIcon, QStyle::SP_DirOpenIcon, 468},
    {sipName_SP_DockWidgetCloseButton, QStyle::SP_DockWidgetCloseButton, 468},
    {sipName_SP_DriveCDIcon, QStyle::SP_DriveCDIcon, 468},
    {sipName_SP_DriveDVDIcon, QStyle::SP_DriveDVDIcon, 468},
    {sipName_SP_DriveFDIcon, QStyle::SP_DriveFDIcon, 468},
    {sipName_SP_DriveHDIcon, QStyle::SP_DriveHDIcon, 468},
    {sipName_SP_DriveNetIcon, QStyle::SP_DriveNetIcon, 468},
    {sipName_SP_FileDialogBack, QStyle::SP_FileDialogBack, 468},
    {sipName_SP_FileDialogContentsView, QStyle::SP_FileDialogContentsView, 468},
    {sipName_SP_FileDialogDetailedView, QStyle::SP_FileDialogDetailedView, 468},
    {sipName_SP_FileDialogEnd, QStyle::SP_FileDialogEnd, 468},
    {sipName_SP_FileDialogInfoView, QStyle::SP_FileDialogInfoView, 468},
    {sipName_SP_FileDialogListView, QStyle::SP_FileDialogListView, 468},
    {sipName_SP_FileDialogNewFolder, QStyle::SP_FileDialogNewFolder, 468},
    {sipName_SP_FileDialogStart, QStyle::SP_FileDialogStart, 468},
    {sipName_SP_FileDialogToParent, QStyle::SP_FileDialogToParent, 468},
    {sipName_SP_FileIcon, QStyle::SP_FileIcon, 468},
    {sipName_SP_FileLinkIcon, QStyle::SP_FileLinkIcon, 468},
    {sipName_SP_MediaPause, QStyle::SP_MediaPause, 468},
    {sipName_SP_MediaPlay, QStyle::SP_MediaPlay, 468},
    {sipName_SP_MediaSeekBackward, QStyle::SP_MediaSeekBackward, 468},
    {sipName_SP_MediaSeekForward, QStyle::SP_MediaSeekForward, 468},
    {sipName_SP_MediaSkipBackward, QStyle::SP_MediaSkipBackward, 468},
    {sipName_SP_MediaSkipForward, QStyle::SP_MediaSkipForward, 468},
    {sipName_SP_MediaStop, QStyle::SP_MediaStop, 468},
    {sipName_SP_MediaVolume, QStyle::SP_MediaVolume, 468},
    {sipName_SP_MediaVolumeMuted, QStyle::SP_MediaVolumeMuted, 468},
    {sipName_SP_MessageBoxCritical, QStyle::SP_MessageBoxCritical, 468},
    {sipName_SP_MessageBoxInformation, QStyle::SP_MessageBoxInformation, 468},
    {sipName_SP_MessageBoxQuestion, QStyle::SP_MessageBoxQuestion, 468},
    {sipName_SP_MessageBoxWarning, QStyle::SP_MessageBoxWarning, 468},
    {sipName_SP_TitleBarCloseButton, QStyle::SP_TitleBarCloseButton, 468},
    {sipName_SP_TitleBarContextHelpButton, QStyle::SP_TitleBarContextHelpButton, 468},
    {sipName_SP_TitleBarMaxButton, QStyle::SP_TitleBarMaxButton, 468},
    {sipName_SP_TitleBarMenuButton, QStyle::SP_TitleBarMenuButton, 468},
    {sipName_SP_TitleBarMinButton, QStyle::SP_TitleBarMinButton, 468},
    {sipName_SP_TitleBarNormalButton, QStyle::SP_TitleBarNormalButton, 468},
    {sipName_SP_TitleBarShadeButton, QStyle::SP_TitleBarShadeButton, 468},
    {sipName_SP_TitleBarUnshadeButton, QStyle::SP_TitleBarUnshadeButton, 468},
    {sipName_SP_ToolBarHorizontalExtensionButton, QStyle::SP_ToolBarHorizontalExtensionButton, 468},
    {sipName_SP_ToolBarVerticalExtensionButton, QStyle::SP_ToolBarVerticalExtensionButton, 468},
    {sipName_SP_TrashIcon, QStyle::SP_TrashIcon, 468},
    {sipName_SP_VistaShield, QStyle::SP_VistaShield, 468},
    {sipName_State_Active, QStyle::State_Active, 470},
    {sipName_State_AutoRaise, QStyle::State_AutoRaise, 470},
    {sipName_State_Bottom, QStyle::State_Bottom, 470},
    {sipName_State_Children, QStyle::State_Children, 470},
    {sipName_State_DownArrow, QStyle::State_DownArrow, 470},
    {sipName_State_Editing, QStyle::State_Editing, 470},
    {sipName_State_Enabled, QStyle::State_Enabled, 470},
    {sipName_State_FocusAtBorder, QStyle::State_FocusAtBorder, 470},
    {sipName_State_HasFocus, QStyle::State_HasFocus, 470},
    {sipName_State_Horizontal, QStyle::State_Horizontal, 470},
    {sipName_State_Item, QStyle::State_Item, 470},
    {sipName_State_KeyboardFocusChange, QStyle::State_KeyboardFocusChange, 470},
    {sipName_State_Mini, QStyle::State_Mini, 470},
    {sipName_State_MouseOver, QStyle::State_MouseOver, 470},
    {sipName_State_NoChange, QStyle::State_NoChange, 470},
    {sipName_State_None, QStyle::State_None, 470},
    {sipName_State_Off, QStyle::State_Off, 470},
    {sipName_State_On, QStyle::State_On, 470},
    {sipName_State_Open, QStyle::State_Open, 470},
    {sipName_State_Raised, QStyle::State_Raised, 470},
    {sipName_State_ReadOnly, QStyle::State_ReadOnly, 470},
    {sipName_State_Selected, QStyle::State_Selected, 470},
    {sipName_State_Sibling, QStyle::State_Sibling, 470},
    {sipName_State_Small, QStyle::State_Small, 470},
    {sipName_State_Sunken, QStyle::State_Sunken, 470},
    {sipName_State_Top, QStyle::State_Top, 470},
    {sipName_State_UpArrow, QStyle::State_UpArrow, 470},
    {sipName_State_Window, QStyle::State_Window, 470},
};

PyDoc_STRVAR(doc_QStyle, "\1QStyle()");


pyqt4ClassTypeDef sipTypeDef_QtGui_QStyle = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QStyle,
        {0}
    },
    {
        sipNameNr_QStyle,
        {0, 0, 1},
        30, methods_QStyle,
        550, enummembers_QStyle,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QStyle,
    -1,
    -1,
    supers_QStyle,
    0,
    init_QStyle,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QStyle,
    0,
    0,
    0,
    release_QStyle,
    cast_QStyle,
    0,
    0,
    0
},
    &QStyle::staticMetaObject,
    0,
    0
};
