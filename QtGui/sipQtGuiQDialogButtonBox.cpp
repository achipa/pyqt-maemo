/*
 * Interface wrapper code.
 *
 * Generated by SIP snapshot-4.10.1-637497440cb5 on Sat Apr 24 19:01:03 2010
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 45 "/home/maemo/python-qt4-4.7/sip/QtGui/qdialogbuttonbox.sip"
#include <qdialogbuttonbox.h>
#line 39 "sipQtGuiQDialogButtonBox.cpp"

#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 43 "sipQtGuiQDialogButtonBox.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 46 "sipQtGuiQDialogButtonBox.cpp"
#line 45 "/home/maemo/python-qt4-4.7/sip/QtGui/qdialogbuttonbox.sip"
#include <qdialogbuttonbox.h>
#line 49 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 52 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qabstractbutton.sip"
#include <qabstractbutton.h>
#line 55 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qpushbutton.sip"
#include <qpushbutton.h>
#line 58 "sipQtGuiQDialogButtonBox.cpp"
#line 125 "/home/maemo/python-qt4-4.7/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 61 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 64 "sipQtGuiQDialogButtonBox.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 67 "sipQtGuiQDialogButtonBox.cpp"
#line 45 "/home/maemo/python-qt4-4.7/sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 70 "sipQtGuiQDialogButtonBox.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 73 "sipQtGuiQDialogButtonBox.cpp"
#line 45 "/home/maemo/python-qt4-4.7/sip/QtGui/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 76 "sipQtGuiQDialogButtonBox.cpp"
#line 39 "/home/maemo/python-qt4-4.7/sip/QtGui/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 79 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 82 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 85 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 88 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qregion.sip"
#include <qregion.h>
#line 91 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 94 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 97 "sipQtGuiQDialogButtonBox.cpp"
#line 43 "/home/maemo/python-qt4-4.7/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 100 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 103 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 106 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 109 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 112 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qfont.sip"
#include <qfont.h>
#line 115 "sipQtGuiQDialogButtonBox.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 118 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 121 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 124 "sipQtGuiQDialogButtonBox.cpp"
#line 520 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 539 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 129 "sipQtGuiQDialogButtonBox.cpp"
#line 478 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 132 "sipQtGuiQDialogButtonBox.cpp"
#line 466 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 135 "sipQtGuiQDialogButtonBox.cpp"
#line 565 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 138 "sipQtGuiQDialogButtonBox.cpp"
#line 619 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 141 "sipQtGuiQDialogButtonBox.cpp"
#line 590 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 144 "sipQtGuiQDialogButtonBox.cpp"
#line 607 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 147 "sipQtGuiQDialogButtonBox.cpp"
#line 675 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 150 "sipQtGuiQDialogButtonBox.cpp"
#line 301 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 153 "sipQtGuiQDialogButtonBox.cpp"
#line 490 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 156 "sipQtGuiQDialogButtonBox.cpp"
#line 442 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 159 "sipQtGuiQDialogButtonBox.cpp"
#line 428 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 162 "sipQtGuiQDialogButtonBox.cpp"
#line 414 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 165 "sipQtGuiQDialogButtonBox.cpp"
#line 399 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 168 "sipQtGuiQDialogButtonBox.cpp"
#line 379 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 171 "sipQtGuiQDialogButtonBox.cpp"
#line 350 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 174 "sipQtGuiQDialogButtonBox.cpp"
#line 279 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 177 "sipQtGuiQDialogButtonBox.cpp"
#line 238 "/home/maemo/python-qt4-4.7/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 180 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qinputcontext.sip"
#include <qinputcontext.h>
#line 183 "sipQtGuiQDialogButtonBox.cpp"
#line 68 "/home/maemo/python-qt4-4.7/sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 186 "sipQtGuiQDialogButtonBox.cpp"
#line 42 "/home/maemo/python-qt4-4.7/sip/QtGui/qx11info_x11.sip"
#include <qx11info_x11.h>
#line 189 "sipQtGuiQDialogButtonBox.cpp"
#line 125 "/home/maemo/python-qt4-4.7/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 192 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qaction.sip"
#include <qaction.h>
#line 195 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtGui/qlayout.sip"
#include <qlayout.h>
#line 198 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 201 "sipQtGuiQDialogButtonBox.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 204 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 207 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 210 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qicon.sip"
#include <qicon.h>
#line 213 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 216 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qstyle.sip"
#include <qstyle.h>
#line 219 "sipQtGuiQDialogButtonBox.cpp"
#line 318 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 222 "sipQtGuiQDialogButtonBox.cpp"
#line 305 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 225 "sipQtGuiQDialogButtonBox.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 228 "sipQtGuiQDialogButtonBox.cpp"
#line 38 "/home/maemo/python-qt4-4.7/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 231 "sipQtGuiQDialogButtonBox.cpp"
#line 125 "/home/maemo/python-qt4-4.7/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 234 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qthread.sip"
#include <qthread.h>
#line 237 "sipQtGuiQDialogButtonBox.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 240 "sipQtGuiQDialogButtonBox.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 243 "sipQtGuiQDialogButtonBox.cpp"


class sipQDialogButtonBox : public QDialogButtonBox
{
public:
    sipQDialogButtonBox(QWidget *);
    sipQDialogButtonBox(Qt::Orientation,QWidget *);
    sipQDialogButtonBox(QDialogButtonBox::StandardButtons,Qt::Orientation,QWidget *);
    virtual ~sipQDialogButtonBox();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void changeEvent(QEvent *);
    bool event(QEvent *);
    int devType() const;
    void setVisible(bool);
    QSize sizeHint() const;
    QSize minimumSizeHint() const;
    int heightForWidth(int) const;
    QPaintEngine * paintEngine() const;
    void mousePressEvent(QMouseEvent *);
    void mouseReleaseEvent(QMouseEvent *);
    void mouseDoubleClickEvent(QMouseEvent *);
    void mouseMoveEvent(QMouseEvent *);
    void wheelEvent(QWheelEvent *);
    void keyPressEvent(QKeyEvent *);
    void keyReleaseEvent(QKeyEvent *);
    void focusInEvent(QFocusEvent *);
    void focusOutEvent(QFocusEvent *);
    void enterEvent(QEvent *);
    void leaveEvent(QEvent *);
    void paintEvent(QPaintEvent *);
    void moveEvent(QMoveEvent *);
    void resizeEvent(QResizeEvent *);
    void closeEvent(QCloseEvent *);
    void contextMenuEvent(QContextMenuEvent *);
    void tabletEvent(QTabletEvent *);
    void actionEvent(QActionEvent *);
    void dragEnterEvent(QDragEnterEvent *);
    void dragMoveEvent(QDragMoveEvent *);
    void dragLeaveEvent(QDragLeaveEvent *);
    void dropEvent(QDropEvent *);
    void showEvent(QShowEvent *);
    void hideEvent(QHideEvent *);
    int metric(QPaintDevice::PaintDeviceMetric) const;
    void inputMethodEvent(QInputMethodEvent *);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    bool focusNextPrevChild(bool);
    void enabledChange(bool);
    void paletteChange(const QPalette&);
    void fontChange(const QFont&);
    void windowActivationChange(bool);
    void languageChange();
    bool eventFilter(QObject *,QEvent *);
    void timerEvent(QTimerEvent *);
    void childEvent(QChildEvent *);
    void customEvent(QEvent *);
    void connectNotify(const char *);
    void disconnectNotify(const char *);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQDialogButtonBox(const sipQDialogButtonBox &);
    sipQDialogButtonBox &operator = (const sipQDialogButtonBox &);

    char sipPyMethods[47];
};

sipQDialogButtonBox::sipQDialogButtonBox(QWidget *a0): QDialogButtonBox(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDialogButtonBox::sipQDialogButtonBox(Qt::Orientation a0,QWidget *a1): QDialogButtonBox(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDialogButtonBox::sipQDialogButtonBox(QDialogButtonBox::StandardButtons a0,Qt::Orientation a1,QWidget *a2): QDialogButtonBox(a0,a1,a2), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDialogButtonBox::~sipQDialogButtonBox()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQDialogButtonBox::metaObject() const
{
    return sip_QtGui_qt_metaobject(sipPySelf,sipType_QDialogButtonBox);
}

int sipQDialogButtonBox::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QDialogButtonBox::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtGui_qt_metacall(sipPySelf,sipType_QDialogButtonBox,_c,_id,_a);

    return _id;
}

void *sipQDialogButtonBox::qt_metacast(const char *_clname)
{
    return (sip_QtGui_qt_metacast && sip_QtGui_qt_metacast(sipPySelf,sipType_QDialogButtonBox,_clname)) ? this : QDialogButtonBox::qt_metacast(_clname);
}

void sipQDialogButtonBox::changeEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_changeEvent);

    if (!meth)
    {
        QDialogButtonBox::changeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

bool sipQDialogButtonBox::event(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_event);

    if (!meth)
        return QDialogButtonBox::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t,PyObject *,QEvent *);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState,meth,a0);
}

int sipQDialogButtonBox::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[2]),sipPySelf,NULL,sipName_devType);

    if (!meth)
        return QWidget::devType();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtGui_QtCore->em_virthandlers[6]))(sipGILState,meth);
}

void sipQDialogButtonBox::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_setVisible);

    if (!meth)
    {
        QWidget::setVisible(a0);
        return;
    }

    extern void sipVH_QtGui_6(sip_gilstate_t,PyObject *,bool);

    sipVH_QtGui_6(sipGILState,meth,a0);
}

QSize sipQDialogButtonBox::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[4]),sipPySelf,NULL,sipName_sizeHint);

    if (!meth)
        return QWidget::sizeHint();

    extern QSize sipVH_QtGui_4(sip_gilstate_t,PyObject *);

    return sipVH_QtGui_4(sipGILState,meth);
}

QSize sipQDialogButtonBox::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_minimumSizeHint);

    if (!meth)
        return QWidget::minimumSizeHint();

    extern QSize sipVH_QtGui_4(sip_gilstate_t,PyObject *);

    return sipVH_QtGui_4(sipGILState,meth);
}

int sipQDialogButtonBox::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_heightForWidth);

    if (!meth)
        return QWidget::heightForWidth(a0);

    extern int sipVH_QtGui_28(sip_gilstate_t,PyObject *,int);

    return sipVH_QtGui_28(sipGILState,meth,a0);
}

QPaintEngine * sipQDialogButtonBox::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_paintEngine);

    if (!meth)
        return QWidget::paintEngine();

    extern QPaintEngine * sipVH_QtGui_27(sip_gilstate_t,PyObject *);

    return sipVH_QtGui_27(sipGILState,meth);
}

void sipQDialogButtonBox::mousePressEvent(QMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_mousePressEvent);

    if (!meth)
    {
        QWidget::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t,PyObject *,QMouseEvent *);

    sipVH_QtGui_26(sipGILState,meth,a0);
}

void sipQDialogButtonBox::mouseReleaseEvent(QMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!meth)
    {
        QWidget::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t,PyObject *,QMouseEvent *);

    sipVH_QtGui_26(sipGILState,meth,a0);
}

void sipQDialogButtonBox::mouseDoubleClickEvent(QMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!meth)
    {
        QWidget::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t,PyObject *,QMouseEvent *);

    sipVH_QtGui_26(sipGILState,meth,a0);
}

void sipQDialogButtonBox::mouseMoveEvent(QMouseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!meth)
    {
        QWidget::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t,PyObject *,QMouseEvent *);

    sipVH_QtGui_26(sipGILState,meth,a0);
}

void sipQDialogButtonBox::wheelEvent(QWheelEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_wheelEvent);

    if (!meth)
    {
        QWidget::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_5(sip_gilstate_t,PyObject *,QWheelEvent *);

    sipVH_QtGui_5(sipGILState,meth,a0);
}

void sipQDialogButtonBox::keyPressEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_keyPressEvent);

    if (!meth)
    {
        QWidget::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,QKeyEvent *);

    sipVH_QtGui_25(sipGILState,meth,a0);
}

void sipQDialogButtonBox::keyReleaseEvent(QKeyEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!meth)
    {
        QWidget::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t,PyObject *,QKeyEvent *);

    sipVH_QtGui_25(sipGILState,meth,a0);
}

void sipQDialogButtonBox::focusInEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusInEvent);

    if (!meth)
    {
        QWidget::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t,PyObject *,QFocusEvent *);

    sipVH_QtGui_24(sipGILState,meth,a0);
}

void sipQDialogButtonBox::focusOutEvent(QFocusEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusOutEvent);

    if (!meth)
    {
        QWidget::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t,PyObject *,QFocusEvent *);

    sipVH_QtGui_24(sipGILState,meth,a0);
}

void sipQDialogButtonBox::enterEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_enterEvent);

    if (!meth)
    {
        QWidget::enterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQDialogButtonBox::leaveEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_leaveEvent);

    if (!meth)
    {
        QWidget::leaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQDialogButtonBox::paintEvent(QPaintEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_paintEvent);

    if (!meth)
    {
        QWidget::paintEvent(a0);
        return;
    }

    extern void sipVH_QtGui_3(sip_gilstate_t,PyObject *,QPaintEvent *);

    sipVH_QtGui_3(sipGILState,meth,a0);
}

void sipQDialogButtonBox::moveEvent(QMoveEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_moveEvent);

    if (!meth)
    {
        QWidget::moveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_23(sip_gilstate_t,PyObject *,QMoveEvent *);

    sipVH_QtGui_23(sipGILState,meth,a0);
}

void sipQDialogButtonBox::resizeEvent(QResizeEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_resizeEvent);

    if (!meth)
    {
        QWidget::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_2(sip_gilstate_t,PyObject *,QResizeEvent *);

    sipVH_QtGui_2(sipGILState,meth,a0);
}

void sipQDialogButtonBox::closeEvent(QCloseEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_closeEvent);

    if (!meth)
    {
        QWidget::closeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_22(sip_gilstate_t,PyObject *,QCloseEvent *);

    sipVH_QtGui_22(sipGILState,meth,a0);
}

void sipQDialogButtonBox::contextMenuEvent(QContextMenuEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!meth)
    {
        QWidget::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_21(sip_gilstate_t,PyObject *,QContextMenuEvent *);

    sipVH_QtGui_21(sipGILState,meth,a0);
}

void sipQDialogButtonBox::tabletEvent(QTabletEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_tabletEvent);

    if (!meth)
    {
        QWidget::tabletEvent(a0);
        return;
    }

    extern void sipVH_QtGui_20(sip_gilstate_t,PyObject *,QTabletEvent *);

    sipVH_QtGui_20(sipGILState,meth,a0);
}

void sipQDialogButtonBox::actionEvent(QActionEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_actionEvent);

    if (!meth)
    {
        QWidget::actionEvent(a0);
        return;
    }

    extern void sipVH_QtGui_19(sip_gilstate_t,PyObject *,QActionEvent *);

    sipVH_QtGui_19(sipGILState,meth,a0);
}

void sipQDialogButtonBox::dragEnterEvent(QDragEnterEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!meth)
    {
        QWidget::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_18(sip_gilstate_t,PyObject *,QDragEnterEvent *);

    sipVH_QtGui_18(sipGILState,meth,a0);
}

void sipQDialogButtonBox::dragMoveEvent(QDragMoveEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!meth)
    {
        QWidget::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_17(sip_gilstate_t,PyObject *,QDragMoveEvent *);

    sipVH_QtGui_17(sipGILState,meth,a0);
}

void sipQDialogButtonBox::dragLeaveEvent(QDragLeaveEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!meth)
    {
        QWidget::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_16(sip_gilstate_t,PyObject *,QDragLeaveEvent *);

    sipVH_QtGui_16(sipGILState,meth,a0);
}

void sipQDialogButtonBox::dropEvent(QDropEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_dropEvent);

    if (!meth)
    {
        QWidget::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_15(sip_gilstate_t,PyObject *,QDropEvent *);

    sipVH_QtGui_15(sipGILState,meth,a0);
}

void sipQDialogButtonBox::showEvent(QShowEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_showEvent);

    if (!meth)
    {
        QWidget::showEvent(a0);
        return;
    }

    extern void sipVH_QtGui_1(sip_gilstate_t,PyObject *,QShowEvent *);

    sipVH_QtGui_1(sipGILState,meth,a0);
}

void sipQDialogButtonBox::hideEvent(QHideEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_hideEvent);

    if (!meth)
    {
        QWidget::hideEvent(a0);
        return;
    }

    extern void sipVH_QtGui_0(sip_gilstate_t,PyObject *,QHideEvent *);

    sipVH_QtGui_0(sipGILState,meth,a0);
}

int sipQDialogButtonBox::metric(QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[32]),sipPySelf,NULL,sipName_metric);

    if (!meth)
        return QWidget::metric(a0);

    extern int sipVH_QtGui_14(sip_gilstate_t,PyObject *,QPaintDevice::PaintDeviceMetric);

    return sipVH_QtGui_14(sipGILState,meth,a0);
}

void sipQDialogButtonBox::inputMethodEvent(QInputMethodEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!meth)
    {
        QWidget::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_13(sip_gilstate_t,PyObject *,QInputMethodEvent *);

    sipVH_QtGui_13(sipGILState,meth,a0);
}

QVariant sipQDialogButtonBox::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[34]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!meth)
        return QWidget::inputMethodQuery(a0);

    extern QVariant sipVH_QtGui_12(sip_gilstate_t,PyObject *,Qt::InputMethodQuery);

    return sipVH_QtGui_12(sipGILState,meth,a0);
}

bool sipQDialogButtonBox::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!meth)
        return QWidget::focusNextPrevChild(a0);

    extern bool sipVH_QtGui_11(sip_gilstate_t,PyObject *,bool);

    return sipVH_QtGui_11(sipGILState,meth,a0);
}

void sipQDialogButtonBox::enabledChange(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,NULL,sipName_enabledChange);

    if (!meth)
    {
        QWidget::enabledChange(a0);
        return;
    }

    extern void sipVH_QtGui_6(sip_gilstate_t,PyObject *,bool);

    sipVH_QtGui_6(sipGILState,meth,a0);
}

void sipQDialogButtonBox::paletteChange(const QPalette& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_paletteChange);

    if (!meth)
    {
        QWidget::paletteChange(a0);
        return;
    }

    extern void sipVH_QtGui_10(sip_gilstate_t,PyObject *,const QPalette&);

    sipVH_QtGui_10(sipGILState,meth,a0);
}

void sipQDialogButtonBox::fontChange(const QFont& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_fontChange);

    if (!meth)
    {
        QWidget::fontChange(a0);
        return;
    }

    extern void sipVH_QtGui_9(sip_gilstate_t,PyObject *,const QFont&);

    sipVH_QtGui_9(sipGILState,meth,a0);
}

void sipQDialogButtonBox::windowActivationChange(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,NULL,sipName_windowActivationChange);

    if (!meth)
    {
        QWidget::windowActivationChange(a0);
        return;
    }

    extern void sipVH_QtGui_6(sip_gilstate_t,PyObject *,bool);

    sipVH_QtGui_6(sipGILState,meth,a0);
}

void sipQDialogButtonBox::languageChange()
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,NULL,sipName_languageChange);

    if (!meth)
    {
        QWidget::languageChange();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t,PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState,meth);
}

bool sipQDialogButtonBox::eventFilter(QObject *a0,QEvent *a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,NULL,sipName_eventFilter);

    if (!meth)
        return QObject::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_18)(sip_gilstate_t,PyObject *,QObject *,QEvent *);

    return ((sipVH_QtCore_18)(sipModuleAPI_QtGui_QtCore->em_virthandlers[18]))(sipGILState,meth,a0,a1);
}

void sipQDialogButtonBox::timerEvent(QTimerEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,NULL,sipName_timerEvent);

    if (!meth)
    {
        QObject::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t,PyObject *,QTimerEvent *);

    ((sipVH_QtCore_9)(sipModuleAPI_QtGui_QtCore->em_virthandlers[9]))(sipGILState,meth,a0);
}

void sipQDialogButtonBox::childEvent(QChildEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_childEvent);

    if (!meth)
    {
        QObject::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t,PyObject *,QChildEvent *);

    ((sipVH_QtCore_25)(sipModuleAPI_QtGui_QtCore->em_virthandlers[25]))(sipGILState,meth,a0);
}

void sipQDialogButtonBox::customEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,NULL,sipName_customEvent);

    if (!meth)
    {
        QObject::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQDialogButtonBox::connectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[45],sipPySelf,NULL,sipName_connectNotify);

    if (!meth)
    {
        QObject::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState,meth,a0);
}

void sipQDialogButtonBox::disconnectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[46],sipPySelf,NULL,sipName_disconnectNotify);

    if (!meth)
    {
        QObject::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState,meth,a0);
}


PyDoc_STRVAR(doc_QDialogButtonBox_setOrientation, "QDialogButtonBox.setOrientation(Qt.Orientation)");

extern "C" {static PyObject *meth_QDialogButtonBox_setOrientation(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_setOrientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::Orientation a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_Qt_Orientation, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setOrientation(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_setOrientation, doc_QDialogButtonBox_setOrientation);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_orientation, "QDialogButtonBox.orientation() -> Qt.Orientation");

extern "C" {static PyObject *meth_QDialogButtonBox_orientation(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_orientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            Qt::Orientation sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->orientation();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_Qt_Orientation);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_orientation, doc_QDialogButtonBox_orientation);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_addButton, "QDialogButtonBox.addButton(QAbstractButton, QDialogButtonBox.ButtonRole)\n"
    "QDialogButtonBox.addButton(QString, QDialogButtonBox.ButtonRole) -> QPushButton\n"
    "QDialogButtonBox.addButton(QDialogButtonBox.StandardButton) -> QPushButton");

extern "C" {static PyObject *meth_QDialogButtonBox_addButton(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_addButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractButton * a0;
        QDialogButtonBox::ButtonRole a1;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:E", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QAbstractButton, &a0, sipType_QDialogButtonBox_ButtonRole, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->addButton(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QString * a0;
        int a0State = 0;
        QDialogButtonBox::ButtonRole a1;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1E", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QString,&a0, &a0State, sipType_QDialogButtonBox_ButtonRole, &a1))
        {
            QPushButton *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addButton(*a0,a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            return sipConvertFromType(sipRes,sipType_QPushButton,sipSelf);
        }
    }

    {
        QDialogButtonBox::StandardButton a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QDialogButtonBox_StandardButton, &a0))
        {
            QPushButton *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->addButton(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QPushButton,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_addButton, doc_QDialogButtonBox_addButton);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_removeButton, "QDialogButtonBox.removeButton(QAbstractButton)");

extern "C" {static PyObject *meth_QDialogButtonBox_removeButton(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_removeButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractButton * a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QAbstractButton, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->removeButton(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_removeButton, doc_QDialogButtonBox_removeButton);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_clear, "QDialogButtonBox.clear()");

extern "C" {static PyObject *meth_QDialogButtonBox_clear(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_clear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->clear();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_clear, doc_QDialogButtonBox_clear);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_buttons, "QDialogButtonBox.buttons() -> list-of-QAbstractButton");

extern "C" {static PyObject *meth_QDialogButtonBox_buttons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_buttons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            QList<QAbstractButton *> *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QAbstractButton *>(sipCpp->buttons());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QAbstractButton,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_buttons, doc_QDialogButtonBox_buttons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_buttonRole, "QDialogButtonBox.buttonRole(QAbstractButton) -> QDialogButtonBox.ButtonRole");

extern "C" {static PyObject *meth_QDialogButtonBox_buttonRole(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_buttonRole(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractButton * a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QAbstractButton, &a0))
        {
            QDialogButtonBox::ButtonRole sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->buttonRole(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_QDialogButtonBox_ButtonRole);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_buttonRole, doc_QDialogButtonBox_buttonRole);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_setStandardButtons, "QDialogButtonBox.setStandardButtons(QDialogButtonBox.StandardButtons)");

extern "C" {static PyObject *meth_QDialogButtonBox_setStandardButtons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_setStandardButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox::StandardButtons * a0;
        int a0State = 0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QDialogButtonBox_StandardButtons, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setStandardButtons(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(a0,sipType_QDialogButtonBox_StandardButtons,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_setStandardButtons, doc_QDialogButtonBox_setStandardButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_standardButtons, "QDialogButtonBox.standardButtons() -> QDialogButtonBox.StandardButtons");

extern "C" {static PyObject *meth_QDialogButtonBox_standardButtons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_standardButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            QDialogButtonBox::StandardButtons *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QDialogButtonBox::StandardButtons(sipCpp->standardButtons());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QDialogButtonBox_StandardButtons,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_standardButtons, doc_QDialogButtonBox_standardButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_standardButton, "QDialogButtonBox.standardButton(QAbstractButton) -> QDialogButtonBox.StandardButton");

extern "C" {static PyObject *meth_QDialogButtonBox_standardButton(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_standardButton(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractButton * a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QAbstractButton, &a0))
        {
            QDialogButtonBox::StandardButton sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->standardButton(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_QDialogButtonBox_StandardButton);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_standardButton, doc_QDialogButtonBox_standardButton);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_button, "QDialogButtonBox.button(QDialogButtonBox.StandardButton) -> QPushButton");

extern "C" {static PyObject *meth_QDialogButtonBox_button(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_button(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox::StandardButton a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QDialogButtonBox_StandardButton, &a0))
        {
            QPushButton *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->button(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QPushButton,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_button, doc_QDialogButtonBox_button);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_setCenterButtons, "QDialogButtonBox.setCenterButtons(bool)");

extern "C" {static PyObject *meth_QDialogButtonBox_setCenterButtons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_setCenterButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QDialogButtonBox, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setCenterButtons(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_setCenterButtons, doc_QDialogButtonBox_setCenterButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_centerButtons, "QDialogButtonBox.centerButtons() -> bool");

extern "C" {static PyObject *meth_QDialogButtonBox_centerButtons(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_centerButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDialogButtonBox, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->centerButtons();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_centerButtons, doc_QDialogButtonBox_centerButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_changeEvent, "QDialogButtonBox.changeEvent(QEvent)");

extern "C" {static PyObject *meth_QDialogButtonBox_changeEvent(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_changeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QDialogButtonBox::changeEvent(a0) : sipCpp->changeEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_changeEvent, doc_QDialogButtonBox_changeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QDialogButtonBox_event, "QDialogButtonBox.event(QEvent) -> bool");

extern "C" {static PyObject *meth_QDialogButtonBox_event(PyObject *, PyObject *);}
static PyObject *meth_QDialogButtonBox_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent * a0;
        QDialogButtonBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QDialogButtonBox, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QDialogButtonBox::event(a0) : sipCpp->event(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDialogButtonBox, sipName_event, doc_QDialogButtonBox_event);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QDialogButtonBox(void *, const sipTypeDef *);}
static void *cast_QDialogButtonBox(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QDialogButtonBox)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QWidget)->ctd_cast((QWidget *)(QDialogButtonBox *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QDialogButtonBox(void *, int);}
static void release_QDialogButtonBox(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQDialogButtonBox *>(sipCppV);
    else
        delete reinterpret_cast<QDialogButtonBox *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QDialogButtonBox(sipSimpleWrapper *);}
static void dealloc_QDialogButtonBox(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQDialogButtonBox *>(sipSelf->u.cppPtr)->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QDialogButtonBox(sipSelf->u.cppPtr,sipSelf->flags);
    }
}


extern "C" {static void *init_QDialogButtonBox(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QDialogButtonBox(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQDialogButtonBox *sipCpp = 0;

    {
        QWidget * a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQDialogButtonBox(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        Qt::Orientation a0;
        QWidget * a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "E|JH", sipType_Qt_Orientation, &a0, sipType_QWidget, &a1, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQDialogButtonBox(a0,a1);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        QDialogButtonBox::StandardButtons * a0;
        int a0State = 0;
        Qt::Orientation a1 = Qt::Horizontal;
        QWidget * a2 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_orientation,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J1|EJH", sipType_QDialogButtonBox_StandardButtons, &a0, &a0State, sipType_Qt_Orientation, &a1, sipType_QWidget, &a2, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQDialogButtonBox(*a0,a1,a2);
            Py_END_ALLOW_THREADS
            sipReleaseType(a0,sipType_QDialogButtonBox_StandardButtons,a0State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QDialogButtonBox[] = {{741, 255, 1}};


static PyMethodDef methods_QDialogButtonBox[] = {
    {SIP_MLNAME_CAST(sipName_addButton), meth_QDialogButtonBox_addButton, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_addButton)},
    {SIP_MLNAME_CAST(sipName_button), meth_QDialogButtonBox_button, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_button)},
    {SIP_MLNAME_CAST(sipName_buttonRole), meth_QDialogButtonBox_buttonRole, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_buttonRole)},
    {SIP_MLNAME_CAST(sipName_buttons), meth_QDialogButtonBox_buttons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_buttons)},
    {SIP_MLNAME_CAST(sipName_centerButtons), meth_QDialogButtonBox_centerButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_centerButtons)},
    {SIP_MLNAME_CAST(sipName_changeEvent), meth_QDialogButtonBox_changeEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_changeEvent)},
    {SIP_MLNAME_CAST(sipName_clear), meth_QDialogButtonBox_clear, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_clear)},
    {SIP_MLNAME_CAST(sipName_event), meth_QDialogButtonBox_event, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_event)},
    {SIP_MLNAME_CAST(sipName_orientation), meth_QDialogButtonBox_orientation, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_orientation)},
    {SIP_MLNAME_CAST(sipName_removeButton), meth_QDialogButtonBox_removeButton, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_removeButton)},
    {SIP_MLNAME_CAST(sipName_setCenterButtons), meth_QDialogButtonBox_setCenterButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_setCenterButtons)},
    {SIP_MLNAME_CAST(sipName_setOrientation), meth_QDialogButtonBox_setOrientation, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_setOrientation)},
    {SIP_MLNAME_CAST(sipName_setStandardButtons), meth_QDialogButtonBox_setStandardButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_setStandardButtons)},
    {SIP_MLNAME_CAST(sipName_standardButton), meth_QDialogButtonBox_standardButton, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_standardButton)},
    {SIP_MLNAME_CAST(sipName_standardButtons), meth_QDialogButtonBox_standardButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QDialogButtonBox_standardButtons)}
};

static sipEnumMemberDef enummembers_QDialogButtonBox[] = {
    {sipName_Abort, QDialogButtonBox::Abort, 88},
    {sipName_AcceptRole, QDialogButtonBox::AcceptRole, 87},
    {sipName_ActionRole, QDialogButtonBox::ActionRole, 87},
    {sipName_Apply, QDialogButtonBox::Apply, 88},
    {sipName_ApplyRole, QDialogButtonBox::ApplyRole, 87},
    {sipName_Cancel, QDialogButtonBox::Cancel, 88},
    {sipName_Close, QDialogButtonBox::Close, 88},
    {sipName_DestructiveRole, QDialogButtonBox::DestructiveRole, 87},
    {sipName_Discard, QDialogButtonBox::Discard, 88},
    {sipName_GnomeLayout, QDialogButtonBox::GnomeLayout, 86},
    {sipName_Help, QDialogButtonBox::Help, 88},
    {sipName_HelpRole, QDialogButtonBox::HelpRole, 87},
    {sipName_Ignore, QDialogButtonBox::Ignore, 88},
    {sipName_InvalidRole, QDialogButtonBox::InvalidRole, 87},
    {sipName_KdeLayout, QDialogButtonBox::KdeLayout, 86},
    {sipName_MacLayout, QDialogButtonBox::MacLayout, 86},
    {sipName_No, QDialogButtonBox::No, 88},
    {sipName_NoButton, QDialogButtonBox::NoButton, 88},
    {sipName_NoRole, QDialogButtonBox::NoRole, 87},
    {sipName_NoToAll, QDialogButtonBox::NoToAll, 88},
    {sipName_Ok, QDialogButtonBox::Ok, 88},
    {sipName_Open, QDialogButtonBox::Open, 88},
    {sipName_RejectRole, QDialogButtonBox::RejectRole, 87},
    {sipName_Reset, QDialogButtonBox::Reset, 88},
    {sipName_ResetRole, QDialogButtonBox::ResetRole, 87},
    {sipName_RestoreDefaults, QDialogButtonBox::RestoreDefaults, 88},
    {sipName_Retry, QDialogButtonBox::Retry, 88},
    {sipName_Save, QDialogButtonBox::Save, 88},
    {sipName_SaveAll, QDialogButtonBox::SaveAll, 88},
    {sipName_WinLayout, QDialogButtonBox::WinLayout, 86},
    {sipName_Yes, QDialogButtonBox::Yes, 88},
    {sipName_YesRole, QDialogButtonBox::YesRole, 87},
    {sipName_YesToAll, QDialogButtonBox::YesToAll, 88},
};


/* Define this type's PyQt4 signals. */
static const pyqt4QtSignal pyqt4_signals_QDialogButtonBox[] = {
    {"rejected()", "\1QDialogButtonBox.rejected()", 0},
    {"helpRequested()", "\1QDialogButtonBox.helpRequested()", 0},
    {"clicked(QAbstractButton *)", "\1QDialogButtonBox.clicked(QAbstractButton)", 0},
    {"accepted()", "\1QDialogButtonBox.accepted()", 0},
    {0, 0, 0}
};

PyDoc_STRVAR(doc_QDialogButtonBox, "\1QDialogButtonBox(QWidget parent=None)\n"
    "QDialogButtonBox(Qt.Orientation, QWidget parent=None)\n"
    "QDialogButtonBox(QDialogButtonBox.StandardButtons, Qt.Orientation orientation=Qt.Horizontal, QWidget parent=None)");


pyqt4ClassTypeDef sipTypeDef_QtGui_QDialogButtonBox = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QDialogButtonBox,
        {0}
    },
    {
        sipNameNr_QDialogButtonBox,
        {0, 0, 1},
        15, methods_QDialogButtonBox,
        33, enummembers_QDialogButtonBox,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QDialogButtonBox,
    -1,
    -1,
    supers_QDialogButtonBox,
    0,
    init_QDialogButtonBox,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QDialogButtonBox,
    0,
    0,
    0,
    release_QDialogButtonBox,
    cast_QDialogButtonBox,
    0,
    0,
    0
},
    &QDialogButtonBox::staticMetaObject,
    0,
    pyqt4_signals_QDialogButtonBox
};
