/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.10-snapshot-20100108 on Tue Feb 16 16:32:13 2010
 *
 * Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * Please review the following information to ensure GNU General
 * Public Licensing requirements will be met:
 * http://trolltech.com/products/qt/licenses/licensing/opensource/. If
 * you are unsure which license is appropriate for your use, please
 * review the following information:
 * http://trolltech.com/products/qt/licenses/licensing/licensingoverview
 * or contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtDesigner.h"

#line 34 "/home/maemo/python-qt4-4.7/sip/QtDesigner/qpydesignercustomwidgetplugin.sip"
#include <qpydesignercustomwidgetplugin.h>
#line 39 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"

#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 43 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 46 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 318 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 49 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 305 "/home/maemo/python-qt4-4.7/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 52 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 55 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 38 "/home/maemo/python-qt4-4.7/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 58 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 43 "/home/maemo/python-qt4-4.7/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 61 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 40 "/home/maemo/python-qt4-4.7/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 64 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 125 "/home/maemo/python-qt4-4.7/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 67 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qthread.sip"
#include <qthread.h>
#line 70 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 73 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 76 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 79 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 37 "/home/maemo/python-qt4-4.7/sip/QtDesigner/abstractformeditor.sip"
#include <abstractformeditor.h>
#line 82 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 85 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"
#line 41 "/home/maemo/python-qt4-4.7/sip/QtGui/qicon.sip"
#include <qicon.h>
#line 88 "sipQtDesignerQPyDesignerCustomWidgetPlugin.cpp"


class sipQPyDesignerCustomWidgetPlugin : public QPyDesignerCustomWidgetPlugin
{
public:
    sipQPyDesignerCustomWidgetPlugin(QObject *);
    virtual ~sipQPyDesignerCustomWidgetPlugin();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    bool event(QEvent *);
    bool eventFilter(QObject *,QEvent *);
    void timerEvent(QTimerEvent *);
    void childEvent(QChildEvent *);
    void customEvent(QEvent *);
    void connectNotify(const char *);
    void disconnectNotify(const char *);
    QString name() const;
    QString group() const;
    QString toolTip() const;
    QString whatsThis() const;
    QString includeFile() const;
    QIcon icon() const;
    bool isContainer() const;
    QWidget * createWidget(QWidget *);
    bool isInitialized() const;
    void initialize(QDesignerFormEditorInterface *);
    QString domXml() const;
    QString codeTemplate() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQPyDesignerCustomWidgetPlugin(const sipQPyDesignerCustomWidgetPlugin &);
    sipQPyDesignerCustomWidgetPlugin &operator = (const sipQPyDesignerCustomWidgetPlugin &);

    char sipPyMethods[19];
};

sipQPyDesignerCustomWidgetPlugin::sipQPyDesignerCustomWidgetPlugin(QObject *a0): QPyDesignerCustomWidgetPlugin(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQPyDesignerCustomWidgetPlugin::~sipQPyDesignerCustomWidgetPlugin()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQPyDesignerCustomWidgetPlugin::metaObject() const
{
    return sip_QtDesigner_qt_metaobject(sipPySelf,sipType_QPyDesignerCustomWidgetPlugin);
}

int sipQPyDesignerCustomWidgetPlugin::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QPyDesignerCustomWidgetPlugin::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtDesigner_qt_metacall(sipPySelf,sipType_QPyDesignerCustomWidgetPlugin,_c,_id,_a);

    return _id;
}

void *sipQPyDesignerCustomWidgetPlugin::qt_metacast(const char *_clname)
{
    return (sip_QtDesigner_qt_metacast && sip_QtDesigner_qt_metacast(sipPySelf,sipType_QPyDesignerCustomWidgetPlugin,_clname)) ? this : QPyDesignerCustomWidgetPlugin::qt_metacast(_clname);
}

bool sipQPyDesignerCustomWidgetPlugin::event(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_event);

    if (!meth)
        return QObject::event(a0);

    typedef bool (*sipVH_QtCore_12)(sip_gilstate_t,PyObject *,QEvent *);

    return ((sipVH_QtCore_12)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[12]))(sipGILState,meth,a0);
}

bool sipQPyDesignerCustomWidgetPlugin::eventFilter(QObject *a0,QEvent *a1)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_eventFilter);

    if (!meth)
        return QObject::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_20)(sip_gilstate_t,PyObject *,QObject *,QEvent *);

    return ((sipVH_QtCore_20)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[20]))(sipGILState,meth,a0,a1);
}

void sipQPyDesignerCustomWidgetPlugin::timerEvent(QTimerEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_timerEvent);

    if (!meth)
    {
        QObject::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_3)(sip_gilstate_t,PyObject *,QTimerEvent *);

    ((sipVH_QtCore_3)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[3]))(sipGILState,meth,a0);
}

void sipQPyDesignerCustomWidgetPlugin::childEvent(QChildEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!meth)
    {
        QObject::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_19)(sip_gilstate_t,PyObject *,QChildEvent *);

    ((sipVH_QtCore_19)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[19]))(sipGILState,meth,a0);
}

void sipQPyDesignerCustomWidgetPlugin::customEvent(QEvent *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_customEvent);

    if (!meth)
    {
        QObject::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_18)(sip_gilstate_t,PyObject *,QEvent *);

    ((sipVH_QtCore_18)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[18]))(sipGILState,meth,a0);
}

void sipQPyDesignerCustomWidgetPlugin::connectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_connectNotify);

    if (!meth)
    {
        QObject::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

void sipQPyDesignerCustomWidgetPlugin::disconnectNotify(const char *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_disconnectNotify);

    if (!meth)
    {
        QObject::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t,PyObject *,const char *);

    ((sipVH_QtCore_17)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[17]))(sipGILState,meth,a0);
}

QString sipQPyDesignerCustomWidgetPlugin::name() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,sipName_QPyDesignerCustomWidgetPlugin,sipName_name);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_57)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_57)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[57]))(sipGILState,meth);
}

QString sipQPyDesignerCustomWidgetPlugin::group() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[8]),sipPySelf,sipName_QPyDesignerCustomWidgetPlugin,sipName_group);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_57)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_57)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[57]))(sipGILState,meth);
}

QString sipQPyDesignerCustomWidgetPlugin::toolTip() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[9]),sipPySelf,sipName_QPyDesignerCustomWidgetPlugin,sipName_toolTip);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_57)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_57)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[57]))(sipGILState,meth);
}

QString sipQPyDesignerCustomWidgetPlugin::whatsThis() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,sipName_QPyDesignerCustomWidgetPlugin,sipName_whatsThis);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_57)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_57)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[57]))(sipGILState,meth);
}

QString sipQPyDesignerCustomWidgetPlugin::includeFile() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[11]),sipPySelf,sipName_QPyDesignerCustomWidgetPlugin,sipName_includeFile);

    if (!meth)
        return QString();

    typedef QString (*sipVH_QtCore_57)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_57)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[57]))(sipGILState,meth);
}

QIcon sipQPyDesignerCustomWidgetPlugin::icon() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[12]),sipPySelf,sipName_QPyDesignerCustomWidgetPlugin,sipName_icon);

    if (!meth)
        return QIcon();

    extern QIcon sipVH_QtDesigner_9(sip_gilstate_t,PyObject *);

    return sipVH_QtDesigner_9(sipGILState,meth);
}

bool sipQPyDesignerCustomWidgetPlugin::isContainer() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[13]),sipPySelf,sipName_QPyDesignerCustomWidgetPlugin,sipName_isContainer);

    if (!meth)
        return 0;

    typedef bool (*sipVH_QtCore_1)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_1)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[1]))(sipGILState,meth);
}

QWidget * sipQPyDesignerCustomWidgetPlugin::createWidget(QWidget *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,sipName_QPyDesignerCustomWidgetPlugin,sipName_createWidget);

    if (!meth)
        return 0;

    typedef QWidget * (*sipVH_QtGui_9)(sip_gilstate_t,PyObject *,QWidget *);

    return ((sipVH_QtGui_9)(sipModuleAPI_QtDesigner_QtGui->em_virthandlers[9]))(sipGILState,meth,a0);
}

bool sipQPyDesignerCustomWidgetPlugin::isInitialized() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[15]),sipPySelf,NULL,sipName_isInitialized);

    if (!meth)
        return QDesignerCustomWidgetInterface::isInitialized();

    typedef bool (*sipVH_QtCore_1)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_1)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[1]))(sipGILState,meth);
}

void sipQPyDesignerCustomWidgetPlugin::initialize(QDesignerFormEditorInterface *a0)
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_initialize);

    if (!meth)
    {
        QDesignerCustomWidgetInterface::initialize(a0);
        return;
    }

    extern void sipVH_QtDesigner_8(sip_gilstate_t,PyObject *,QDesignerFormEditorInterface *);

    sipVH_QtDesigner_8(sipGILState,meth,a0);
}

QString sipQPyDesignerCustomWidgetPlugin::domXml() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[17]),sipPySelf,NULL,sipName_domXml);

    if (!meth)
        return QDesignerCustomWidgetInterface::domXml();

    typedef QString (*sipVH_QtCore_57)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_57)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[57]))(sipGILState,meth);
}

QString sipQPyDesignerCustomWidgetPlugin::codeTemplate() const
{
    sip_gilstate_t sipGILState;
    PyObject *meth;

    meth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[18]),sipPySelf,NULL,sipName_codeTemplate);

    if (!meth)
        return QDesignerCustomWidgetInterface::codeTemplate();

    typedef QString (*sipVH_QtCore_57)(sip_gilstate_t,PyObject *);

    return ((sipVH_QtCore_57)(sipModuleAPI_QtDesigner_QtCore->em_virthandlers[57]))(sipGILState,meth);
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QPyDesignerCustomWidgetPlugin(void *, const sipTypeDef *);}
static void *cast_QPyDesignerCustomWidgetPlugin(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QPyDesignerCustomWidgetPlugin)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QObject)->ctd_cast((QObject *)(QPyDesignerCustomWidgetPlugin *)ptr,targetType)) != NULL)
        return res;

    if ((res = ((const sipClassTypeDef *)sipType_QDesignerCustomWidgetInterface)->ctd_cast((QDesignerCustomWidgetInterface *)(QPyDesignerCustomWidgetPlugin *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QPyDesignerCustomWidgetPlugin(void *, int);}
static void release_QPyDesignerCustomWidgetPlugin(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQPyDesignerCustomWidgetPlugin *>(sipCppV);
    else
        delete reinterpret_cast<QPyDesignerCustomWidgetPlugin *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QPyDesignerCustomWidgetPlugin(sipSimpleWrapper *);}
static void dealloc_QPyDesignerCustomWidgetPlugin(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQPyDesignerCustomWidgetPlugin *>(sipSelf->u.cppPtr)->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QPyDesignerCustomWidgetPlugin(sipSelf->u.cppPtr,sipSelf->flags);
    }
}


extern "C" {static void *init_QPyDesignerCustomWidgetPlugin(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_QPyDesignerCustomWidgetPlugin(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQPyDesignerCustomWidgetPlugin *sipCpp = 0;

    {
        QObject * a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQPyDesignerCustomWidgetPlugin(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QPyDesignerCustomWidgetPlugin[] = {{111, 0, 0}, {6, 255, 1}};

PyDoc_STRVAR(doc_QPyDesignerCustomWidgetPlugin, "\1QPyDesignerCustomWidgetPlugin(QObject parent=None)");


pyqt4ClassTypeDef sipTypeDef_QtDesigner_QPyDesignerCustomWidgetPlugin = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QPyDesignerCustomWidgetPlugin,
        {0}
    },
    {
        sipNameNr_QPyDesignerCustomWidgetPlugin,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QPyDesignerCustomWidgetPlugin,
    -1,
    -1,
    supers_QPyDesignerCustomWidgetPlugin,
    0,
    init_QPyDesignerCustomWidgetPlugin,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QPyDesignerCustomWidgetPlugin,
    0,
    0,
    0,
    release_QPyDesignerCustomWidgetPlugin,
    cast_QPyDesignerCustomWidgetPlugin,
    0,
    0,
    0
},
    &QPyDesignerCustomWidgetPlugin::staticMetaObject,
    0,
    0
};
